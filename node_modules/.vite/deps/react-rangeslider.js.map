{
  "version": 3,
  "sources": ["../../resize-observer-polyfill/dist/ResizeObserver.es.js", "../../react-rangeslider/lib/utils.js", "../../react-rangeslider/lib/Rangeslider.js", "../../react-rangeslider/lib/index.js", "dep:react-rangeslider"],
  "sourcesContent": ["/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.capitalize = capitalize;\nexports.clamp = clamp;\n/**\n * Capitalize first letter of string\n * @private\n * @param  {string} - String\n * @return {string} - String with first letter capitalized\n */\nfunction capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.substr(1);\n}\n\n/**\n * Clamp position between a range\n * @param  {number} - Value to be clamped\n * @param  {number} - Minimum value in range\n * @param  {number} - Maximum value in range\n * @return {number} - Clamped value\n */\nfunction clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _resizeObserverPolyfill = require('resize-observer-polyfill');\n\nvar _resizeObserverPolyfill2 = _interopRequireDefault(_resizeObserverPolyfill);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint no-debugger: \"warn\" */\n\n\n/**\n * Predefined constants\n * @type {Object}\n */\nvar constants = {\n  orientation: {\n    horizontal: {\n      dimension: 'width',\n      direction: 'left',\n      reverseDirection: 'right',\n      coordinate: 'x'\n    },\n    vertical: {\n      dimension: 'height',\n      direction: 'top',\n      reverseDirection: 'bottom',\n      coordinate: 'y'\n    }\n  }\n};\n\nvar Slider = function (_Component) {\n  _inherits(Slider, _Component);\n\n  function Slider(props, context) {\n    _classCallCheck(this, Slider);\n\n    var _this = _possibleConstructorReturn(this, (Slider.__proto__ || Object.getPrototypeOf(Slider)).call(this, props, context));\n\n    _this.handleFormat = function (value) {\n      var format = _this.props.format;\n\n      return format ? format(value) : value;\n    };\n\n    _this.handleUpdate = function () {\n      if (!_this.slider) {\n        // for shallow rendering\n        return;\n      }\n      var orientation = _this.props.orientation;\n\n      var dimension = (0, _utils.capitalize)(constants.orientation[orientation].dimension);\n      var sliderPos = _this.slider['offset' + dimension];\n      var handlePos = _this.handle['offset' + dimension];\n\n      _this.setState({\n        limit: sliderPos - handlePos,\n        grab: handlePos / 2\n      });\n    };\n\n    _this.handleStart = function (e) {\n      var onChangeStart = _this.props.onChangeStart;\n\n      document.addEventListener('mousemove', _this.handleDrag);\n      document.addEventListener('mouseup', _this.handleEnd);\n      _this.setState({\n        active: true\n      }, function () {\n        onChangeStart && onChangeStart(e);\n      });\n    };\n\n    _this.handleDrag = function (e) {\n      e.stopPropagation();\n      var onChange = _this.props.onChange;\n      var _e$target = e.target,\n          className = _e$target.className,\n          classList = _e$target.classList,\n          dataset = _e$target.dataset;\n\n      if (!onChange || className === 'rangeslider__labels') return;\n\n      var value = _this.position(e);\n\n      if (classList && classList.contains('rangeslider__label-item') && dataset.value) {\n        value = parseFloat(dataset.value);\n      }\n\n      onChange && onChange(value, e);\n    };\n\n    _this.handleEnd = function (e) {\n      var onChangeComplete = _this.props.onChangeComplete;\n\n      _this.setState({\n        active: false\n      }, function () {\n        onChangeComplete && onChangeComplete(e);\n      });\n      document.removeEventListener('mousemove', _this.handleDrag);\n      document.removeEventListener('mouseup', _this.handleEnd);\n    };\n\n    _this.handleKeyDown = function (e) {\n      e.preventDefault();\n      var keyCode = e.keyCode;\n      var _this$props = _this.props,\n          value = _this$props.value,\n          min = _this$props.min,\n          max = _this$props.max,\n          step = _this$props.step,\n          onChange = _this$props.onChange;\n\n      var sliderValue = void 0;\n\n      switch (keyCode) {\n        case 38:\n        case 39:\n          sliderValue = value + step > max ? max : value + step;\n          onChange && onChange(sliderValue, e);\n          break;\n        case 37:\n        case 40:\n          sliderValue = value - step < min ? min : value - step;\n          onChange && onChange(sliderValue, e);\n          break;\n      }\n    };\n\n    _this.getPositionFromValue = function (value) {\n      var limit = _this.state.limit;\n      var _this$props2 = _this.props,\n          min = _this$props2.min,\n          max = _this$props2.max;\n\n      var diffMaxMin = max - min;\n      var diffValMin = value - min;\n      var percentage = diffValMin / diffMaxMin;\n      var pos = Math.round(percentage * limit);\n\n      return pos;\n    };\n\n    _this.getValueFromPosition = function (pos) {\n      var limit = _this.state.limit;\n      var _this$props3 = _this.props,\n          orientation = _this$props3.orientation,\n          min = _this$props3.min,\n          max = _this$props3.max,\n          step = _this$props3.step;\n\n      var percentage = (0, _utils.clamp)(pos, 0, limit) / (limit || 1);\n      var baseVal = step * Math.round(percentage * (max - min) / step);\n      var value = orientation === 'horizontal' ? baseVal + min : max - baseVal;\n\n      return (0, _utils.clamp)(value, min, max);\n    };\n\n    _this.position = function (e) {\n      var grab = _this.state.grab;\n      var _this$props4 = _this.props,\n          orientation = _this$props4.orientation,\n          reverse = _this$props4.reverse;\n\n\n      var node = _this.slider;\n      var coordinateStyle = constants.orientation[orientation].coordinate;\n      var directionStyle = reverse ? constants.orientation[orientation].reverseDirection : constants.orientation[orientation].direction;\n      var clientCoordinateStyle = 'client' + (0, _utils.capitalize)(coordinateStyle);\n      var coordinate = !e.touches ? e[clientCoordinateStyle] : e.touches[0][clientCoordinateStyle];\n      var direction = node.getBoundingClientRect()[directionStyle];\n      var pos = reverse ? direction - coordinate - grab : coordinate - direction - grab;\n      var value = _this.getValueFromPosition(pos);\n\n      return value;\n    };\n\n    _this.coordinates = function (pos) {\n      var _this$state = _this.state,\n          limit = _this$state.limit,\n          grab = _this$state.grab;\n      var orientation = _this.props.orientation;\n\n      var value = _this.getValueFromPosition(pos);\n      var position = _this.getPositionFromValue(value);\n      var handlePos = orientation === 'horizontal' ? position + grab : position;\n      var fillPos = orientation === 'horizontal' ? handlePos : limit - handlePos;\n\n      return {\n        fill: fillPos,\n        handle: handlePos,\n        label: handlePos\n      };\n    };\n\n    _this.renderLabels = function (labels) {\n      return _react2.default.createElement(\n        'ul',\n        {\n          ref: function ref(sl) {\n            _this.labels = sl;\n          },\n          className: (0, _classnames2.default)('rangeslider__labels')\n        },\n        labels\n      );\n    };\n\n    _this.state = {\n      active: false,\n      limit: 0,\n      grab: 0\n    };\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.handleUpdate();\n      var resizeObserver = new _resizeObserverPolyfill2.default(this.handleUpdate);\n      resizeObserver.observe(this.slider);\n    }\n\n    /**\n     * Format label/tooltip value\n     * @param  {Number} - value\n     * @return {Formatted Number}\n     */\n\n\n    /**\n     * Update slider state on change\n     * @return {void}\n     */\n\n\n    /**\n     * Attach event listeners to mousemove/mouseup events\n     * @return {void}\n     */\n\n\n    /**\n     * Handle drag/mousemove event\n     * @param  {Object} e - Event object\n     * @return {void}\n     */\n\n\n    /**\n     * Detach event listeners to mousemove/mouseup events\n     * @return {void}\n     */\n\n\n    /**\n     * Support for key events on the slider handle\n     * @param  {Object} e - Event object\n     * @return {void}\n     */\n\n\n    /**\n     * Calculate position of slider based on its value\n     * @param  {number} value - Current value of slider\n     * @return {position} pos - Calculated position of slider based on value\n     */\n\n\n    /**\n     * Translate position of slider to slider value\n     * @param  {number} pos - Current position/coordinates of slider\n     * @return {number} value - Slider value\n     */\n\n\n    /**\n     * Calculate position of slider based on value\n     * @param  {Object} e - Event object\n     * @return {number} value - Slider value\n     */\n\n\n    /**\n     * Grab coordinates of slider\n     * @param  {Object} pos - Position object\n     * @return {Object} - Slider fill/handle coordinates\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          value = _props.value,\n          orientation = _props.orientation,\n          className = _props.className,\n          tooltip = _props.tooltip,\n          reverse = _props.reverse,\n          labels = _props.labels,\n          min = _props.min,\n          max = _props.max,\n          handleLabel = _props.handleLabel;\n      var active = this.state.active;\n\n      var dimension = constants.orientation[orientation].dimension;\n      var direction = reverse ? constants.orientation[orientation].reverseDirection : constants.orientation[orientation].direction;\n      var position = this.getPositionFromValue(value);\n      var coords = this.coordinates(position);\n      var fillStyle = _defineProperty({}, dimension, coords.fill + 'px');\n      var handleStyle = _defineProperty({}, direction, coords.handle + 'px');\n      var showTooltip = tooltip && active;\n\n      var labelItems = [];\n      var labelKeys = Object.keys(labels);\n\n      if (labelKeys.length > 0) {\n        labelKeys = labelKeys.sort(function (a, b) {\n          return reverse ? a - b : b - a;\n        });\n\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = labelKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var key = _step.value;\n\n            var labelPosition = this.getPositionFromValue(key);\n            var labelCoords = this.coordinates(labelPosition);\n            var labelStyle = _defineProperty({}, direction, labelCoords.label + 'px');\n\n            labelItems.push(_react2.default.createElement(\n              'li',\n              {\n                key: key,\n                className: (0, _classnames2.default)('rangeslider__label-item'),\n                'data-value': key,\n                onMouseDown: this.handleDrag,\n                onTouchStart: this.handleStart,\n                onTouchEnd: this.handleEnd,\n                style: labelStyle\n              },\n              this.props.labels[key]\n            ));\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      return _react2.default.createElement(\n        'div',\n        {\n          ref: function ref(s) {\n            _this2.slider = s;\n          },\n          className: (0, _classnames2.default)('rangeslider', 'rangeslider-' + orientation, { 'rangeslider-reverse': reverse }, className),\n          onMouseDown: this.handleDrag,\n          onMouseUp: this.handleEnd,\n          onTouchStart: this.handleStart,\n          onTouchEnd: this.handleEnd,\n          'aria-valuemin': min,\n          'aria-valuemax': max,\n          'aria-valuenow': value,\n          'aria-orientation': orientation\n        },\n        _react2.default.createElement('div', { className: 'rangeslider__fill', style: fillStyle }),\n        _react2.default.createElement(\n          'div',\n          {\n            ref: function ref(sh) {\n              _this2.handle = sh;\n            },\n            className: 'rangeslider__handle',\n            onMouseDown: this.handleStart,\n            onTouchMove: this.handleDrag,\n            onTouchEnd: this.handleEnd,\n            onKeyDown: this.handleKeyDown,\n            style: handleStyle,\n            tabIndex: 0\n          },\n          showTooltip ? _react2.default.createElement(\n            'div',\n            {\n              ref: function ref(st) {\n                _this2.tooltip = st;\n              },\n              className: 'rangeslider__handle-tooltip'\n            },\n            _react2.default.createElement(\n              'span',\n              null,\n              this.handleFormat(value)\n            )\n          ) : null,\n          _react2.default.createElement(\n            'div',\n            { className: 'rangeslider__handle-label' },\n            handleLabel\n          )\n        ),\n        labels ? this.renderLabels(labelItems) : null\n      );\n    }\n  }]);\n\n  return Slider;\n}(_react.Component);\n\nSlider.propTypes = {\n  min: _propTypes2.default.number,\n  max: _propTypes2.default.number,\n  step: _propTypes2.default.number,\n  value: _propTypes2.default.number,\n  orientation: _propTypes2.default.string,\n  tooltip: _propTypes2.default.bool,\n  reverse: _propTypes2.default.bool,\n  labels: _propTypes2.default.object,\n  handleLabel: _propTypes2.default.string,\n  format: _propTypes2.default.func,\n  onChangeStart: _propTypes2.default.func,\n  onChange: _propTypes2.default.func,\n  onChangeComplete: _propTypes2.default.func\n};\nSlider.defaultProps = {\n  min: 0,\n  max: 100,\n  step: 1,\n  value: 0,\n  orientation: 'horizontal',\n  tooltip: true,\n  reverse: false,\n  labels: {},\n  handleLabel: ''\n};\nexports.default = Slider;", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Rangeslider = require('./Rangeslider');\n\nvar _Rangeslider2 = _interopRequireDefault(_Rangeslider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Rangeslider2.default;", "export default require(\"./node_modules/react-rangeslider/lib/index.js\");"],
  "mappings": "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",
  "names": ["index", "ResizeObserverController", "observers", "ResizeObservation", "ResizeObserverEntry", "ResizeObserverSPI", "ResizeObserver", "self", "Slider"]
}
