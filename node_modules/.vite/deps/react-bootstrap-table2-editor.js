import {
  require_prop_types
} from "./chunk-DSFMVNFM.js";
import "./chunk-3M2UZNYF.js";
import "./chunk-VGPEVICO.js";
import {
  require_classnames
} from "./chunk-U56G3BF2.js";
import {
  require_react
} from "./chunk-KL6BCPSF.js";
import {
  __commonJS
} from "./chunk-S5KM4IGW.js";

// node_modules/react-bootstrap-table2-editor/lib/src/const.js
var require_const = __commonJS({
  "node_modules/react-bootstrap-table2-editor/lib/src/const.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var TIME_TO_CLOSE_MESSAGE = exports.TIME_TO_CLOSE_MESSAGE = 3e3;
    var DELAY_FOR_DBCLICK = exports.DELAY_FOR_DBCLICK = 200;
    var CLICK_TO_CELL_EDIT = exports.CLICK_TO_CELL_EDIT = "click";
    var DBCLICK_TO_CELL_EDIT = exports.DBCLICK_TO_CELL_EDIT = "dbclick";
    var EDITTYPE = exports.EDITTYPE = {
      TEXT: "text",
      SELECT: "select",
      TEXTAREA: "textarea",
      CHECKBOX: "checkbox",
      DATE: "date"
    };
  }
});

// node_modules/react-bootstrap-table2-editor/lib/src/context.js
var require_context = __commonJS({
  "node_modules/react-bootstrap-table2-editor/lib/src/context.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Consumer = void 0;
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _const = require_const();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var CellEditContext = _react2.default.createContext();
    exports.default = function(_, dataOperator, isRemoteCellEdit, handleCellChange) {
      var CellEditProvider = function(_React$Component) {
        _inherits(CellEditProvider2, _React$Component);
        function CellEditProvider2(props) {
          _classCallCheck(this, CellEditProvider2);
          var _this = _possibleConstructorReturn(this, (CellEditProvider2.__proto__ || Object.getPrototypeOf(CellEditProvider2)).call(this, props));
          _this.doUpdate = _this.doUpdate.bind(_this);
          _this.startEditing = _this.startEditing.bind(_this);
          _this.escapeEditing = _this.escapeEditing.bind(_this);
          _this.completeEditing = _this.completeEditing.bind(_this);
          _this.handleCellUpdate = _this.handleCellUpdate.bind(_this);
          _this.state = {
            ridx: null,
            cidx: null,
            message: null
          };
          return _this;
        }
        _createClass(CellEditProvider2, [{
          key: "UNSAFE_componentWillReceiveProps",
          value: function UNSAFE_componentWillReceiveProps(nextProps) {
            if (nextProps.cellEdit && isRemoteCellEdit()) {
              if (nextProps.cellEdit.options.errorMessage) {
                this.setState(function() {
                  return {
                    message: nextProps.cellEdit.options.errorMessage
                  };
                });
              } else {
                this.escapeEditing();
              }
            }
          }
        }, {
          key: "handleCellUpdate",
          value: function handleCellUpdate(row, column, newValue) {
            var _this2 = this;
            var newValueWithType = dataOperator.typeConvert(column.type, newValue);
            var cellEdit = this.props.cellEdit;
            var beforeSaveCell = cellEdit.options.beforeSaveCell;
            var oldValue = _.get(row, column.dataField);
            var beforeSaveCellDone = function beforeSaveCellDone2() {
              var result2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;
              if (result2) {
                _this2.doUpdate(row, column, newValueWithType);
              } else {
                _this2.escapeEditing();
              }
            };
            if (_.isFunction(beforeSaveCell)) {
              var result = beforeSaveCell(oldValue, newValueWithType, row, column, beforeSaveCellDone);
              if (_.isObject(result) && result.async) {
                return;
              }
            }
            this.doUpdate(row, column, newValueWithType);
          }
        }, {
          key: "doUpdate",
          value: function doUpdate(row, column, newValue) {
            var _props = this.props, keyField = _props.keyField, cellEdit = _props.cellEdit, data = _props.data;
            var afterSaveCell = cellEdit.options.afterSaveCell;
            var rowId = _.get(row, keyField);
            var oldValue = _.get(row, column.dataField);
            if (isRemoteCellEdit()) {
              handleCellChange(rowId, column.dataField, newValue);
            } else {
              dataOperator.editCell(data, keyField, rowId, column.dataField, newValue);
              if (_.isFunction(afterSaveCell))
                afterSaveCell(oldValue, newValue, row, column);
              this.completeEditing();
            }
          }
        }, {
          key: "completeEditing",
          value: function completeEditing() {
            this.setState(function() {
              return {
                ridx: null,
                cidx: null,
                message: null
              };
            });
          }
        }, {
          key: "startEditing",
          value: function startEditing(ridx, cidx) {
            var _this3 = this;
            var editing = function editing2() {
              _this3.setState(function() {
                return {
                  ridx,
                  cidx
                };
              });
            };
            var selectRow = this.props.selectRow;
            if (!selectRow || selectRow.clickToEdit || !selectRow.clickToSelect)
              editing();
          }
        }, {
          key: "escapeEditing",
          value: function escapeEditing() {
            this.setState(function() {
              return {
                ridx: null,
                cidx: null
              };
            });
          }
        }, {
          key: "render",
          value: function render() {
            var _props$cellEdit = this.props.cellEdit, _props$cellEdit$optio = _props$cellEdit.options, nonEditableRows = _props$cellEdit$optio.nonEditableRows, errorMessage = _props$cellEdit$optio.errorMessage, optionsRest = _objectWithoutProperties(_props$cellEdit$optio, ["nonEditableRows", "errorMessage"]), cellEditRest = _objectWithoutProperties(_props$cellEdit, ["options"]);
            var newCellEdit = _extends({}, optionsRest, cellEditRest, this.state, {
              nonEditableRows: _.isDefined(nonEditableRows) ? nonEditableRows() : [],
              onStart: this.startEditing,
              onEscape: this.escapeEditing,
              onUpdate: this.handleCellUpdate
            });
            return _react2.default.createElement(
              CellEditContext.Provider,
              {
                value: _extends({}, newCellEdit)
              },
              this.props.children
            );
          }
        }]);
        return CellEditProvider2;
      }(_react2.default.Component);
      CellEditProvider.propTypes = {
        data: _propTypes2.default.array.isRequired,
        selectRow: _propTypes2.default.object,
        options: _propTypes2.default.shape({
          mode: _propTypes2.default.oneOf([_const.CLICK_TO_CELL_EDIT, _const.DBCLICK_TO_CELL_EDIT]).isRequired,
          onErrorMessageDisappear: _propTypes2.default.func,
          blurToSave: _propTypes2.default.bool,
          beforeSaveCell: _propTypes2.default.func,
          afterSaveCell: _propTypes2.default.func,
          onStartEdit: _propTypes2.default.func,
          nonEditableRows: _propTypes2.default.func,
          timeToCloseMessage: _propTypes2.default.number,
          errorMessage: _propTypes2.default.any
        })
      };
      return {
        Provider: CellEditProvider
      };
    };
    var Consumer = exports.Consumer = CellEditContext.Consumer;
  }
});

// node_modules/react-bootstrap-table2-editor/lib/src/row-consumer.js
var require_row_consumer = __commonJS({
  "node_modules/react-bootstrap-table2-editor/lib/src/row-consumer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _const = require_const();
    var _context = require_context();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.default = function(Component, selectRowEnabled) {
      var renderWithCellEdit = function renderWithCellEdit2(props, cellEdit) {
        var key = props.value;
        var editableRow = !(cellEdit.nonEditableRows.length > 0 && cellEdit.nonEditableRows.indexOf(key) > -1);
        var attrs = {};
        if (selectRowEnabled && cellEdit.mode === _const.DBCLICK_TO_CELL_EDIT) {
          attrs.DELAY_FOR_DBCLICK = _const.DELAY_FOR_DBCLICK;
        }
        return _react2.default.createElement(Component, _extends({}, props, attrs, {
          editingRowIdx: cellEdit.ridx,
          editingColIdx: cellEdit.cidx,
          editable: editableRow,
          onStart: cellEdit.onStart,
          clickToEdit: cellEdit.mode === _const.CLICK_TO_CELL_EDIT,
          dbclickToEdit: cellEdit.mode === _const.DBCLICK_TO_CELL_EDIT
        }));
      };
      function withConsumer(props) {
        return _react2.default.createElement(
          _context.Consumer,
          null,
          function(cellEdit) {
            return renderWithCellEdit(props, cellEdit);
          }
        );
      }
      withConsumer.displayName = "WithCellEditingRowConsumer";
      return withConsumer;
    };
  }
});

// node_modules/react-bootstrap-table2-editor/lib/src/dropdown-editor.js
var require_dropdown_editor = __commonJS({
  "node_modules/react-bootstrap-table2-editor/lib/src/dropdown-editor.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _classnames = require_classnames();
    var _classnames2 = _interopRequireDefault(_classnames);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var DropDownEditor = function(_Component) {
      _inherits(DropDownEditor2, _Component);
      function DropDownEditor2(props) {
        _classCallCheck(this, DropDownEditor2);
        var _this = _possibleConstructorReturn(this, (DropDownEditor2.__proto__ || Object.getPrototypeOf(DropDownEditor2)).call(this, props));
        var options = props.options;
        if (props.getOptions) {
          options = props.getOptions(_this.setOptions.bind(_this), {
            row: props.row,
            column: props.column
          }) || [];
        }
        _this.state = { options };
        return _this;
      }
      _createClass(DropDownEditor2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var _props = this.props, defaultValue = _props.defaultValue, didMount = _props.didMount;
          this.select.value = defaultValue;
          this.select.focus();
          if (didMount)
            didMount();
        }
      }, {
        key: "setOptions",
        value: function setOptions(options) {
          this.setState({ options });
        }
      }, {
        key: "getValue",
        value: function getValue() {
          return this.select.value;
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          var _props2 = this.props, defaultValue = _props2.defaultValue, didMount = _props2.didMount, getOptions = _props2.getOptions, className = _props2.className, rest = _objectWithoutProperties(_props2, ["defaultValue", "didMount", "getOptions", "className"]);
          var editorClass = (0, _classnames2.default)("form-control editor edit-select", className);
          var attr = _extends({}, rest, {
            className: editorClass
          });
          return _react2.default.createElement(
            "select",
            _extends({}, attr, {
              ref: function ref(node) {
                return _this2.select = node;
              },
              defaultValue
            }),
            this.state.options.map(function(_ref) {
              var label = _ref.label, value = _ref.value;
              return _react2.default.createElement(
                "option",
                { key: value, value },
                label
              );
            })
          );
        }
      }]);
      return DropDownEditor2;
    }(_react.Component);
    DropDownEditor.propTypes = {
      row: _propTypes2.default.object.isRequired,
      column: _propTypes2.default.object.isRequired,
      defaultValue: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
      className: _propTypes2.default.string,
      style: _propTypes2.default.object,
      options: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.shape({
        label: _propTypes2.default.string,
        value: _propTypes2.default.any
      }))]),
      didMount: _propTypes2.default.func,
      getOptions: _propTypes2.default.func
    };
    DropDownEditor.defaultProps = {
      className: "",
      defaultValue: "",
      style: {},
      options: [],
      didMount: void 0,
      getOptions: void 0
    };
    exports.default = DropDownEditor;
  }
});

// node_modules/react-bootstrap-table2-editor/lib/src/textarea-editor.js
var require_textarea_editor = __commonJS({
  "node_modules/react-bootstrap-table2-editor/lib/src/textarea-editor.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _classnames = require_classnames();
    var _classnames2 = _interopRequireDefault(_classnames);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var TextAreaEditor = function(_Component) {
      _inherits(TextAreaEditor2, _Component);
      function TextAreaEditor2(props) {
        _classCallCheck(this, TextAreaEditor2);
        var _this = _possibleConstructorReturn(this, (TextAreaEditor2.__proto__ || Object.getPrototypeOf(TextAreaEditor2)).call(this, props));
        _this.handleKeyDown = _this.handleKeyDown.bind(_this);
        return _this;
      }
      _createClass(TextAreaEditor2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var _props = this.props, defaultValue = _props.defaultValue, didMount = _props.didMount, autoSelectText = _props.autoSelectText;
          this.text.value = defaultValue;
          this.text.focus();
          if (autoSelectText)
            this.text.select();
          if (didMount)
            didMount();
        }
      }, {
        key: "getValue",
        value: function getValue() {
          return this.text.value;
        }
      }, {
        key: "handleKeyDown",
        value: function handleKeyDown(e) {
          if (e.keyCode === 13 && !e.shiftKey)
            return;
          if (this.props.onKeyDown) {
            this.props.onKeyDown(e);
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          var _props2 = this.props, defaultValue = _props2.defaultValue, didMount = _props2.didMount, className = _props2.className, autoSelectText = _props2.autoSelectText, rest = _objectWithoutProperties(_props2, ["defaultValue", "didMount", "className", "autoSelectText"]);
          var editorClass = (0, _classnames2.default)("form-control editor edit-textarea", className);
          return _react2.default.createElement("textarea", _extends({
            ref: function ref(node) {
              return _this2.text = node;
            },
            type: "textarea",
            className: editorClass
          }, rest, {
            onKeyDown: this.handleKeyDown
          }));
        }
      }]);
      return TextAreaEditor2;
    }(_react.Component);
    TextAreaEditor.propTypes = {
      className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),
      defaultValue: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
      onKeyDown: _propTypes2.default.func,
      autoSelectText: _propTypes2.default.bool,
      didMount: _propTypes2.default.func
    };
    TextAreaEditor.defaultProps = {
      className: "",
      defaultValue: "",
      autoSelectText: false,
      onKeyDown: void 0,
      didMount: void 0
    };
    exports.default = TextAreaEditor;
  }
});

// node_modules/react-bootstrap-table2-editor/lib/src/checkbox-editor.js
var require_checkbox_editor = __commonJS({
  "node_modules/react-bootstrap-table2-editor/lib/src/checkbox-editor.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _slicedToArray = function() {
      function sliceIterator(arr, i) {
        var _arr = [];
        var _n = true;
        var _d = false;
        var _e = void 0;
        try {
          for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
            _arr.push(_s.value);
            if (i && _arr.length === i)
              break;
          }
        } catch (err) {
          _d = true;
          _e = err;
        } finally {
          try {
            if (!_n && _i["return"])
              _i["return"]();
          } finally {
            if (_d)
              throw _e;
          }
        }
        return _arr;
      }
      return function(arr, i) {
        if (Array.isArray(arr)) {
          return arr;
        } else if (Symbol.iterator in Object(arr)) {
          return sliceIterator(arr, i);
        } else {
          throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }
      };
    }();
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _classnames = require_classnames();
    var _classnames2 = _interopRequireDefault(_classnames);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var CheckBoxEditor = function(_Component) {
      _inherits(CheckBoxEditor2, _Component);
      function CheckBoxEditor2(props) {
        _classCallCheck(this, CheckBoxEditor2);
        var _this = _possibleConstructorReturn(this, (CheckBoxEditor2.__proto__ || Object.getPrototypeOf(CheckBoxEditor2)).call(this, props));
        _this.state = {
          checked: props.defaultValue.toString() === props.value.split(":")[0]
        };
        _this.handleChange = _this.handleChange.bind(_this);
        return _this;
      }
      _createClass(CheckBoxEditor2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var didMount = this.props.didMount;
          this.checkbox.focus();
          if (didMount)
            didMount();
        }
      }, {
        key: "getValue",
        value: function getValue() {
          var _props$value$split = this.props.value.split(":"), _props$value$split2 = _slicedToArray(_props$value$split, 2), positive = _props$value$split2[0], negative = _props$value$split2[1];
          return this.checkbox.checked ? positive : negative;
        }
      }, {
        key: "handleChange",
        value: function handleChange(e) {
          if (this.props.onChange)
            this.props.onChange(e);
          var target = e.target;
          this.setState(function() {
            return { checked: target.checked };
          });
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          var _props = this.props, defaultValue = _props.defaultValue, didMount = _props.didMount, className = _props.className, rest = _objectWithoutProperties(_props, ["defaultValue", "didMount", "className"]);
          var editorClass = (0, _classnames2.default)("editor edit-chseckbox checkbox", className);
          return _react2.default.createElement("input", _extends({
            ref: function ref(node) {
              return _this2.checkbox = node;
            },
            type: "checkbox",
            className: editorClass
          }, rest, {
            checked: this.state.checked,
            onChange: this.handleChange
          }));
        }
      }]);
      return CheckBoxEditor2;
    }(_react.Component);
    CheckBoxEditor.propTypes = {
      className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),
      value: _propTypes2.default.string,
      defaultValue: _propTypes2.default.any,
      onChange: _propTypes2.default.func,
      didMount: _propTypes2.default.func
    };
    CheckBoxEditor.defaultProps = {
      className: "",
      value: "on:off",
      defaultValue: false,
      onChange: void 0,
      didMount: void 0
    };
    exports.default = CheckBoxEditor;
  }
});

// node_modules/react-bootstrap-table2-editor/lib/src/date-editor.js
var require_date_editor = __commonJS({
  "node_modules/react-bootstrap-table2-editor/lib/src/date-editor.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _classnames = require_classnames();
    var _classnames2 = _interopRequireDefault(_classnames);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var DateEditor = function(_Component) {
      _inherits(DateEditor2, _Component);
      function DateEditor2() {
        _classCallCheck(this, DateEditor2);
        return _possibleConstructorReturn(this, (DateEditor2.__proto__ || Object.getPrototypeOf(DateEditor2)).apply(this, arguments));
      }
      _createClass(DateEditor2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var _props = this.props, defaultValue = _props.defaultValue, didMount = _props.didMount;
          this.date.valueAsDate = new Date(defaultValue);
          this.date.focus();
          if (didMount)
            didMount();
        }
      }, {
        key: "getValue",
        value: function getValue() {
          return this.date.value;
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          var _props2 = this.props, defaultValue = _props2.defaultValue, didMount = _props2.didMount, className = _props2.className, rest = _objectWithoutProperties(_props2, ["defaultValue", "didMount", "className"]);
          var editorClass = (0, _classnames2.default)("form-control editor edit-date", className);
          return _react2.default.createElement("input", _extends({
            ref: function ref(node) {
              return _this2.date = node;
            },
            type: "date",
            className: editorClass
          }, rest));
        }
      }]);
      return DateEditor2;
    }(_react.Component);
    DateEditor.propTypes = {
      className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),
      defaultValue: _propTypes2.default.string,
      didMount: _propTypes2.default.func
    };
    DateEditor.defaultProps = {
      className: "",
      defaultValue: "",
      didMount: void 0
    };
    exports.default = DateEditor;
  }
});

// node_modules/react-bootstrap-table2-editor/lib/src/text-editor.js
var require_text_editor = __commonJS({
  "node_modules/react-bootstrap-table2-editor/lib/src/text-editor.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _classnames = require_classnames();
    var _classnames2 = _interopRequireDefault(_classnames);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectWithoutProperties(obj, keys) {
      var target = {};
      for (var i in obj) {
        if (keys.indexOf(i) >= 0)
          continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i))
          continue;
        target[i] = obj[i];
      }
      return target;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var TextEditor = function(_Component) {
      _inherits(TextEditor2, _Component);
      function TextEditor2() {
        _classCallCheck(this, TextEditor2);
        return _possibleConstructorReturn(this, (TextEditor2.__proto__ || Object.getPrototypeOf(TextEditor2)).apply(this, arguments));
      }
      _createClass(TextEditor2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var _props = this.props, defaultValue = _props.defaultValue, didMount = _props.didMount, autoSelectText = _props.autoSelectText;
          this.text.value = defaultValue;
          this.text.focus();
          if (autoSelectText)
            this.text.select();
          if (didMount)
            didMount();
        }
      }, {
        key: "getValue",
        value: function getValue() {
          return this.text.value;
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;
          var _props2 = this.props, defaultValue = _props2.defaultValue, didMount = _props2.didMount, className = _props2.className, autoSelectText = _props2.autoSelectText, rest = _objectWithoutProperties(_props2, ["defaultValue", "didMount", "className", "autoSelectText"]);
          var editorClass = (0, _classnames2.default)("form-control editor edit-text", className);
          return _react2.default.createElement("input", _extends({
            ref: function ref(node) {
              return _this2.text = node;
            },
            type: "text",
            className: editorClass
          }, rest));
        }
      }]);
      return TextEditor2;
    }(_react.Component);
    TextEditor.propTypes = {
      className: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.object]),
      defaultValue: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
      autoSelectText: _propTypes2.default.bool,
      didMount: _propTypes2.default.func
    };
    TextEditor.defaultProps = {
      className: null,
      defaultValue: "",
      autoSelectText: false,
      didMount: void 0
    };
    exports.default = TextEditor;
  }
});

// node_modules/react-bootstrap-table2-editor/lib/src/editor-indicator.js
var require_editor_indicator = __commonJS({
  "node_modules/react-bootstrap-table2-editor/lib/src/editor-indicator.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var EditorIndicator = function EditorIndicator2(_ref) {
      var invalidMessage = _ref.invalidMessage;
      return _react2.default.createElement(
        "div",
        { className: "alert alert-danger in", role: "alert" },
        _react2.default.createElement(
          "strong",
          null,
          invalidMessage
        )
      );
    };
    EditorIndicator.propTypes = {
      invalidMessage: _propTypes2.default.string
    };
    EditorIndicator.defaultProps = {
      invalidMessage: null
    };
    exports.default = EditorIndicator;
  }
});

// node_modules/react-bootstrap-table2-editor/lib/src/editing-cell.js
var require_editing_cell = __commonJS({
  "node_modules/react-bootstrap-table2-editor/lib/src/editing-cell.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _classnames = require_classnames();
    var _classnames2 = _interopRequireDefault(_classnames);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _dropdownEditor = require_dropdown_editor();
    var _dropdownEditor2 = _interopRequireDefault(_dropdownEditor);
    var _textareaEditor = require_textarea_editor();
    var _textareaEditor2 = _interopRequireDefault(_textareaEditor);
    var _checkboxEditor = require_checkbox_editor();
    var _checkboxEditor2 = _interopRequireDefault(_checkboxEditor);
    var _dateEditor = require_date_editor();
    var _dateEditor2 = _interopRequireDefault(_dateEditor);
    var _textEditor = require_text_editor();
    var _textEditor2 = _interopRequireDefault(_textEditor);
    var _editorIndicator = require_editor_indicator();
    var _editorIndicator2 = _interopRequireDefault(_editorIndicator);
    var _const = require_const();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    exports.default = function(_, onStartEdit) {
      var _class, _temp;
      return _temp = _class = function(_Component) {
        _inherits(EditingCell, _Component);
        function EditingCell(props) {
          _classCallCheck(this, EditingCell);
          var _this = _possibleConstructorReturn(this, (EditingCell.__proto__ || Object.getPrototypeOf(EditingCell)).call(this, props));
          _this.indicatorTimer = null;
          _this.clearTimer = _this.clearTimer.bind(_this);
          _this.handleBlur = _this.handleBlur.bind(_this);
          _this.handleClick = _this.handleClick.bind(_this);
          _this.handleKeyDown = _this.handleKeyDown.bind(_this);
          _this.beforeComplete = _this.beforeComplete.bind(_this);
          _this.asyncbeforeCompete = _this.asyncbeforeCompete.bind(_this);
          _this.displayErrorMessage = _this.displayErrorMessage.bind(_this);
          _this.state = {
            invalidMessage: null
          };
          return _this;
        }
        _createClass(EditingCell, [{
          key: "componentWillUnmount",
          value: function componentWillUnmount() {
            this.clearTimer();
          }
        }, {
          key: "UNSAFE_componentWillReceiveProps",
          value: function UNSAFE_componentWillReceiveProps(_ref) {
            var message = _ref.message;
            if (_.isDefined(message)) {
              this.createTimer();
              this.setState(function() {
                return {
                  invalidMessage: message
                };
              });
            }
          }
        }, {
          key: "clearTimer",
          value: function clearTimer() {
            if (this.indicatorTimer) {
              clearTimeout(this.indicatorTimer);
            }
          }
        }, {
          key: "createTimer",
          value: function createTimer() {
            var _this2 = this;
            this.clearTimer();
            var _props = this.props, timeToCloseMessage = _props.timeToCloseMessage, onErrorMessageDisappear = _props.onErrorMessageDisappear;
            this.indicatorTimer = _.sleep(function() {
              _this2.setState(function() {
                return {
                  invalidMessage: null
                };
              });
              if (_.isFunction(onErrorMessageDisappear))
                onErrorMessageDisappear();
            }, timeToCloseMessage);
          }
        }, {
          key: "displayErrorMessage",
          value: function displayErrorMessage(message) {
            this.setState(function() {
              return {
                invalidMessage: message
              };
            });
            this.createTimer();
          }
        }, {
          key: "asyncbeforeCompete",
          value: function asyncbeforeCompete(newValue) {
            var _this3 = this;
            return function() {
              var result = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : { valid: true };
              var valid = result.valid, message = result.message;
              var _props2 = _this3.props, onUpdate = _props2.onUpdate, row = _props2.row, column = _props2.column;
              if (!valid) {
                _this3.displayErrorMessage(message);
                return;
              }
              onUpdate(row, column, newValue);
            };
          }
        }, {
          key: "beforeComplete",
          value: function beforeComplete(newValue) {
            var _props3 = this.props, onUpdate = _props3.onUpdate, row = _props3.row, column = _props3.column;
            if (_.isFunction(column.validator)) {
              var validateForm = column.validator(newValue, row, column, this.asyncbeforeCompete(newValue));
              if (_.isObject(validateForm)) {
                if (validateForm.async) {
                  return;
                } else if (!validateForm.valid) {
                  this.displayErrorMessage(validateForm.message);
                  return;
                }
              }
            }
            onUpdate(row, column, newValue);
          }
        }, {
          key: "handleBlur",
          value: function handleBlur() {
            var _props4 = this.props, onEscape = _props4.onEscape, blurToSave = _props4.blurToSave;
            if (blurToSave) {
              this.beforeComplete(this.editor.getValue());
            } else {
              onEscape();
            }
          }
        }, {
          key: "handleKeyDown",
          value: function handleKeyDown(e) {
            var onEscape = this.props.onEscape;
            if (e.keyCode === 27) {
              onEscape();
            } else if (e.keyCode === 13) {
              this.beforeComplete(this.editor.getValue());
            }
          }
        }, {
          key: "handleClick",
          value: function handleClick(e) {
            if (e.target.tagName !== "TD") {
              e.stopPropagation();
            }
          }
        }, {
          key: "render",
          value: function render() {
            var _this4 = this;
            var editor = void 0;
            var _props5 = this.props, row = _props5.row, column = _props5.column, className = _props5.className, style = _props5.style, rowIndex = _props5.rowIndex, columnIndex = _props5.columnIndex, autoSelectText = _props5.autoSelectText;
            var dataField = column.dataField;
            var value = _.get(row, dataField);
            var hasError = _.isDefined(this.state.invalidMessage);
            var customEditorClass = column.editorClasses || "";
            if (_.isFunction(column.editorClasses)) {
              customEditorClass = column.editorClasses(value, row, rowIndex, columnIndex);
            }
            var editorStyle = column.editorStyle || {};
            if (_.isFunction(column.editorStyle)) {
              editorStyle = column.editorStyle(value, row, rowIndex, columnIndex);
            }
            var editorClass = (0, _classnames2.default)({
              animated: hasError,
              shake: hasError
            }, customEditorClass);
            var editorProps = {
              ref: function ref(node) {
                return _this4.editor = node;
              },
              defaultValue: value,
              style: editorStyle,
              className: editorClass,
              onKeyDown: this.handleKeyDown,
              onBlur: this.handleBlur
            };
            if (onStartEdit) {
              editorProps.didMount = function() {
                return onStartEdit(row, column, rowIndex, columnIndex);
              };
            }
            var isDefaultEditorDefined = _.isObject(column.editor);
            if (isDefaultEditorDefined) {
              editorProps = _extends({}, editorProps, column.editor);
            } else if (_.isFunction(column.editorRenderer)) {
              editorProps = _extends({}, editorProps, {
                onUpdate: this.beforeComplete
              });
            }
            if (_.isFunction(column.editorRenderer)) {
              editor = column.editorRenderer(editorProps, value, row, column, rowIndex, columnIndex);
            } else if (isDefaultEditorDefined && column.editor.type === _const.EDITTYPE.SELECT) {
              editor = _react2.default.createElement(_dropdownEditor2.default, _extends({}, editorProps, { row, column }));
            } else if (isDefaultEditorDefined && column.editor.type === _const.EDITTYPE.TEXTAREA) {
              editor = _react2.default.createElement(_textareaEditor2.default, _extends({}, editorProps, { autoSelectText }));
            } else if (isDefaultEditorDefined && column.editor.type === _const.EDITTYPE.CHECKBOX) {
              editor = _react2.default.createElement(_checkboxEditor2.default, editorProps);
            } else if (isDefaultEditorDefined && column.editor.type === _const.EDITTYPE.DATE) {
              editor = _react2.default.createElement(_dateEditor2.default, editorProps);
            } else {
              editor = _react2.default.createElement(_textEditor2.default, _extends({}, editorProps, { autoSelectText }));
            }
            return _react2.default.createElement(
              "td",
              {
                className: (0, _classnames2.default)("react-bootstrap-table-editing-cell", className),
                style,
                onClick: this.handleClick
              },
              editor,
              hasError ? _react2.default.createElement(_editorIndicator2.default, { invalidMessage: this.state.invalidMessage }) : null
            );
          }
        }]);
        return EditingCell;
      }(_react.Component), _class.propTypes = {
        row: _propTypes2.default.object.isRequired,
        rowIndex: _propTypes2.default.number.isRequired,
        column: _propTypes2.default.object.isRequired,
        columnIndex: _propTypes2.default.number.isRequired,
        onUpdate: _propTypes2.default.func.isRequired,
        onEscape: _propTypes2.default.func.isRequired,
        timeToCloseMessage: _propTypes2.default.number,
        autoSelectText: _propTypes2.default.bool,
        className: _propTypes2.default.string,
        style: _propTypes2.default.object
      }, _class.defaultProps = {
        timeToCloseMessage: _const.TIME_TO_CLOSE_MESSAGE,
        className: null,
        autoSelectText: false,
        style: {}
      }, _temp;
    };
  }
});

// node_modules/react-bootstrap-table2-editor/lib/src/editing-cell-consumer.js
var require_editing_cell_consumer = __commonJS({
  "node_modules/react-bootstrap-table2-editor/lib/src/editing-cell-consumer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _context = require_context();
    var _editingCell = require_editing_cell();
    var _editingCell2 = _interopRequireDefault(_editingCell);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.default = function(_, onStartEdit) {
      var EditingCell = (0, _editingCell2.default)(_, onStartEdit);
      var renderWithEditingCell = function renderWithEditingCell2(props, cellEdit) {
        var content = _.get(props.row, props.column.dataField);
        var editCellstyle = props.column.editCellStyle || {};
        var editCellclasses = props.column.editCellClasses;
        if (_.isFunction(props.column.editCellStyle)) {
          editCellstyle = props.column.editCellStyle(content, props.row, props.rowIndex, props.columnIndex);
        }
        if (_.isFunction(props.column.editCellClasses)) {
          editCellclasses = props.column.editCellClasses(content, props.row, props.rowIndex, props.columnIndex);
        }
        return _react2.default.createElement(EditingCell, _extends({}, props, {
          className: editCellclasses,
          style: editCellstyle
        }, cellEdit));
      };
      return function(props) {
        return _react2.default.createElement(
          _context.Consumer,
          null,
          function(cellEdit) {
            return renderWithEditingCell(props, cellEdit);
          }
        );
      };
    };
  }
});

// node_modules/react-bootstrap-table2-editor/lib/index.js
var require_lib = __commonJS({
  "node_modules/react-bootstrap-table2-editor/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Type = void 0;
    var _context = require_context();
    var _context2 = _interopRequireDefault(_context);
    var _rowConsumer = require_row_consumer();
    var _rowConsumer2 = _interopRequireDefault(_rowConsumer);
    var _editingCellConsumer = require_editing_cell_consumer();
    var _editingCellConsumer2 = _interopRequireDefault(_editingCellConsumer);
    var _const = require_const();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    exports.default = function() {
      var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      return {
        createContext: _context2.default,
        createEditingCell: _editingCellConsumer2.default,
        withRowLevelCellEdit: _rowConsumer2.default,
        DBCLICK_TO_CELL_EDIT: _const.DBCLICK_TO_CELL_EDIT,
        DELAY_FOR_DBCLICK: _const.DELAY_FOR_DBCLICK,
        options
      };
    };
    var Type = exports.Type = _const.EDITTYPE;
  }
});

// dep:react-bootstrap-table2-editor
var react_bootstrap_table2_editor_default = require_lib();
export {
  react_bootstrap_table2_editor_default as default
};
//# sourceMappingURL=react-bootstrap-table2-editor.js.map
