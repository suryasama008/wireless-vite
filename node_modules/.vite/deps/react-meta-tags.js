import {
  require_react_dom
} from "./chunk-AGYRAQNY.js";
import {
  require_react
} from "./chunk-KL6BCPSF.js";
import {
  __commonJS
} from "./chunk-S5KM4IGW.js";

// node_modules/react-meta-tags/lib/meta_tags_context.js
var require_meta_tags_context = __commonJS({
  "node_modules/react-meta-tags/lib/meta_tags_context.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = exports.MetaContext = void 0;
    var _react = _interopRequireWildcard(require_react());
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj.default = obj;
        return newObj;
      }
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var MetaContext = (0, _react.createContext)({});
    exports.MetaContext = MetaContext;
    var MetaContextProviderWrapper = function(_Component) {
      _inherits(MetaContextProviderWrapper2, _Component);
      function MetaContextProviderWrapper2() {
        _classCallCheck(this, MetaContextProviderWrapper2);
        return _possibleConstructorReturn(this, _getPrototypeOf(MetaContextProviderWrapper2).apply(this, arguments));
      }
      _createClass(MetaContextProviderWrapper2, [{
        key: "render",
        value: function render() {
          return _react.default.createElement(MetaContext.Provider, {
            value: {
              extract: this.props.extract
            }
          }, _react.Children.only(this.props.children));
        }
      }]);
      return MetaContextProviderWrapper2;
    }(_react.Component);
    var _default = MetaContextProviderWrapper;
    exports.default = _default;
  }
});

// node_modules/react-meta-tags/lib/utils.js
var require_utils = __commonJS({
  "node_modules/react-meta-tags/lib/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.filterAndArrangeTags = filterAndArrangeTags;
    exports.getDuplicateTitle = getDuplicateTitle;
    exports.getDuplicateCanonical = getDuplicateCanonical;
    exports.getDuplicateElementById = getDuplicateElementById;
    exports.getDuplicateMeta = getDuplicateMeta;
    exports.appendChild = appendChild;
    exports.removeChild = removeChild;
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance");
    }
    function _iterableToArray(iter) {
      if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
        return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr)) {
        for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
          arr2[i] = arr[i];
        }
        return arr2;
      }
    }
    var camelCaseProps = ["itemProp"];
    var uniqueIdentifiersI = ["property", "name", "itemprop"];
    var uniqueIdentifiers = uniqueIdentifiersI.concat(camelCaseProps);
    var uniqueIdentifiersAll = uniqueIdentifiers.concat(["id"]);
    function filterOutMetaWithId(metas) {
      metas = Array.prototype.slice.call(metas || []);
      return metas.filter(function(meta) {
        return !meta.id;
      });
    }
    function filterAndArrangeTags(headElms) {
      var title = null;
      var canonicalLink = null;
      var metas = [];
      var rest = [];
      headElms.forEach(function(elm) {
        var type = elm.type, props = elm.props;
        if (type === "title") {
          title = elm;
        } else if (type === "link" && props.rel === "canonical") {
          canonicalLink = elm;
        } else if (type === "meta") {
          metas.push(elm);
        } else {
          rest.push(elm);
        }
      });
      return [title].concat(_toConsumableArray(removeDuplicateMetas(metas)), [canonicalLink], rest);
    }
    function removeDuplicateMetas(metas) {
      var addedMeta = {};
      uniqueIdentifiersAll.forEach(function(identifier) {
        addedMeta[identifier] = [];
      });
      var filteredMetas = [];
      var _loop = function _loop2(i2) {
        var meta = metas[i2];
        var id = meta.props.id;
        var addMeta = false;
        if (id) {
          addMeta = !addedMeta.id[id];
        } else {
          addMeta = uniqueIdentifiers.filter(function(identifier) {
            var identifierValue = meta.props[identifier];
            var existing = addedMeta[identifier][identifierValue];
            return existing && !existing.props.id;
          }).length === 0;
        }
        if (addMeta) {
          filteredMetas.unshift(meta);
          uniqueIdentifiersAll.forEach(function(identifier) {
            var identifierValue = meta.props[identifier];
            if (identifierValue)
              addedMeta[identifier][identifierValue] = meta;
          });
        }
      };
      for (var i = metas.length - 1; i >= 0; i--) {
        _loop(i);
      }
      return filteredMetas;
    }
    function getDuplicateTitle() {
      return document.head.querySelectorAll("title");
    }
    function getDuplicateCanonical() {
      return document.head.querySelectorAll('link[rel="canonical"]');
    }
    function getDuplicateElementById(_ref) {
      var id = _ref.id;
      return id && document.head.querySelector("#".concat(id));
    }
    function getDuplicateMeta(meta) {
      var head = document.head;
      return uniqueIdentifiersI.reduce(function(duplicates, identifier) {
        var identifierValue = meta.getAttribute(identifier);
        return identifierValue ? duplicates.concat(filterOutMetaWithId(head.querySelectorAll("[".concat(identifier, ' = "').concat(identifierValue, '"]')))) : duplicates;
      }, []);
    }
    function appendChild(parent, childrens) {
      if (childrens.length === void 0)
        childrens = [childrens];
      var docFrag = document.createDocumentFragment();
      for (var i = 0, ln = childrens.length; i < ln; i++) {
        docFrag.appendChild(childrens[i]);
      }
      parent.appendChild(docFrag);
    }
    function removeChild(parent, childrens) {
      if (childrens.length === void 0)
        childrens = [childrens];
      for (var i = 0, ln = childrens.length; i < ln; i++) {
        parent.removeChild(childrens[i]);
      }
    }
  }
});

// node_modules/react-meta-tags/lib/meta_tags.js
var require_meta_tags = __commonJS({
  "node_modules/react-meta-tags/lib/meta_tags.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _reactDom = _interopRequireDefault(require_react_dom());
    var _utils = require_utils();
    var _meta_tags_context = require_meta_tags_context();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj.default = obj;
        return newObj;
      }
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    var MetaTags = function(_Component) {
      _inherits(MetaTags2, _Component);
      function MetaTags2() {
        _classCallCheck(this, MetaTags2);
        return _possibleConstructorReturn(this, _getPrototypeOf(MetaTags2).apply(this, arguments));
      }
      _createClass(MetaTags2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.temporaryElement = document.createElement("div");
          this.handleChildrens();
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(oldProps) {
          if (oldProps.children !== this.props.children) {
            this.handleChildrens();
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          if (this.temporaryElement) {
            _reactDom.default.unmountComponentAtNode(this.temporaryElement);
          }
        }
      }, {
        key: "extractChildren",
        value: function extractChildren() {
          var extract = this.context.extract;
          var children = this.props.children;
          if (!children) {
            return;
          }
          if (extract) {
            extract(children);
          }
        }
      }, {
        key: "handleChildrens",
        value: function handleChildrens() {
          var _this = this;
          var children = this.props.children;
          if (this.context.extract || !children) {
            return;
          }
          var headComponent = _react.default.createElement("div", {
            className: "react-head-temp"
          }, children);
          _reactDom.default.render(headComponent, this.temporaryElement, function() {
            var childStr = _this.temporaryElement.innerHTML;
            if (_this.lastChildStr === childStr) {
              return;
            }
            _this.lastChildStr = childStr;
            var tempHead = _this.temporaryElement.querySelector(".react-head-temp");
            if (tempHead === null) {
              return;
            }
            var childNodes = Array.prototype.slice.call(tempHead.children);
            var head = document.head;
            var headHtml = head.innerHTML;
            childNodes = childNodes.filter(function(child) {
              return headHtml.indexOf(child.outerHTML) === -1;
            });
            childNodes = childNodes.map(function(child) {
              return child.cloneNode(true);
            });
            childNodes.forEach(function(child) {
              var tag = child.tagName.toLowerCase();
              if (tag === "title") {
                var title = (0, _utils.getDuplicateTitle)();
                if (title)
                  (0, _utils.removeChild)(head, title);
              } else if (child.id) {
                var elm = (0, _utils.getDuplicateElementById)(child);
                if (elm)
                  (0, _utils.removeChild)(head, elm);
              } else if (tag === "meta") {
                var meta = (0, _utils.getDuplicateMeta)(child);
                if (meta)
                  (0, _utils.removeChild)(head, meta);
              } else if (tag === "link" && child.rel === "canonical") {
                var link = (0, _utils.getDuplicateCanonical)(child);
                if (link)
                  (0, _utils.removeChild)(head, link);
              }
            });
            (0, _utils.appendChild)(document.head, childNodes);
          });
        }
      }, {
        key: "render",
        value: function render() {
          this.extractChildren();
          return null;
        }
      }]);
      return MetaTags2;
    }(_react.Component);
    _defineProperty(MetaTags, "contextType", _meta_tags_context.MetaContext);
    var _default = MetaTags;
    exports.default = _default;
    module.exports = exports.default;
  }
});

// node_modules/react-meta-tags/lib/react_title.js
var require_react_title = __commonJS({
  "node_modules/react-meta-tags/lib/react_title.js"(exports, module) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _meta_tags = _interopRequireDefault(require_meta_tags());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key)) {
              var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};
              if (desc.get || desc.set) {
                Object.defineProperty(newObj, key, desc);
              } else {
                newObj[key] = obj[key];
              }
            }
          }
        }
        newObj.default = obj;
        return newObj;
      }
    }
    function _typeof(obj) {
      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function _typeof2(obj2) {
          return typeof obj2;
        };
      } else {
        _typeof = function _typeof2(obj2) {
          return obj2 && typeof Symbol === "function" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
        };
      }
      return _typeof(obj);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      return Constructor;
    }
    function _possibleConstructorReturn(self, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      }
      return _assertThisInitialized(self);
    }
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    var ReactTitle = function(_Component) {
      _inherits(ReactTitle2, _Component);
      function ReactTitle2() {
        _classCallCheck(this, ReactTitle2);
        return _possibleConstructorReturn(this, _getPrototypeOf(ReactTitle2).apply(this, arguments));
      }
      _createClass(ReactTitle2, [{
        key: "render",
        value: function render() {
          return _react.default.createElement(_meta_tags.default, null, _react.default.createElement("title", null, this.props.title));
        }
      }]);
      return ReactTitle2;
    }(_react.Component);
    var _default = ReactTitle;
    exports.default = _default;
    module.exports = exports.default;
  }
});

// node_modules/react-meta-tags/lib/index.js
var require_lib = __commonJS({
  "node_modules/react-meta-tags/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "MetaTagsContext", {
      enumerable: true,
      get: function get() {
        return _meta_tags_context.default;
      }
    });
    Object.defineProperty(exports, "MetaTags", {
      enumerable: true,
      get: function get() {
        return _meta_tags.default;
      }
    });
    Object.defineProperty(exports, "ReactTitle", {
      enumerable: true,
      get: function get() {
        return _react_title.default;
      }
    });
    exports.default = void 0;
    var _meta_tags_context = _interopRequireDefault(require_meta_tags_context());
    var _meta_tags = _interopRequireDefault(require_meta_tags());
    var _react_title = _interopRequireDefault(require_react_title());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var _default = _meta_tags.default;
    exports.default = _default;
  }
});

// dep:react-meta-tags
var react_meta_tags_default = require_lib();
export {
  react_meta_tags_default as default
};
//# sourceMappingURL=react-meta-tags.js.map
