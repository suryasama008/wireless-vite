{
  "version": 3,
  "sources": ["../../hasown/index.js", "../../newify/getInstantiatorFunction.js", "../../newify/index.js", "../../region/node_modules/object-assign/index.js", "../../region/src/inherits.js", "../../region/src/validate.js", "../../region/src/statics.js", "../../region/src/index.js", "../../region/index.js", "../../region-align/Region.static.js", "../../region-align/Region.proto.js", "../../region-align/alignToNormalized.js", "../../region-align/computeAlignRegion.js", "../../region-align/index.js", "../../has-touch/index.js", "../../drag-helper/utils/once.js", "../../drag-helper/index.js", "../../@vtaits/react-color-picker/es/index.js", "../../@vtaits/react-color-picker/es/HueSpectrum.js", "../../@vtaits/react-color-picker/es/utils/common.js", "../../@vtaits/react-color-picker/es/utils/color.js", "../../@vtaits/react-color-picker/es/utils/toStringValue.js", "../../@vtaits/react-color-picker/es/defaultColor.js", "../../@vtaits/react-color-picker/es/utils/validate.js", "../../@vtaits/react-color-picker/es/utils/toColorValue.js", "../../@vtaits/react-color-picker/es/SaturationSpectrum.js", "dep:@vtaits_react-color-picker"],
  "sourcesContent": ["'use strict'\n\nvar hasOwn = Object.prototype.hasOwnProperty\n\nfunction curry(fn, n){\n\n    if (typeof n !== 'number'){\n        n = fn.length\n    }\n\n    function getCurryClosure(prevArgs){\n\n        function curryClosure() {\n\n            var len  = arguments.length\n            var args = [].concat(prevArgs)\n\n            if (len){\n                args.push.apply(args, arguments)\n            }\n\n            if (args.length < n){\n                return getCurryClosure(args)\n            }\n\n            return fn.apply(this, args)\n        }\n\n        return curryClosure\n    }\n\n    return getCurryClosure([])\n}\n\n\nmodule.exports = curry(function(object, property){\n    return hasOwn.call(object, property)\n})", "module.exports = function(){\n\n    'use strict';\n\n    var fns = {}\n\n    return function(len){\n\n        if ( ! fns [len ] ) {\n\n            var args = []\n            var i    = 0\n\n            for (; i < len; i++ ) {\n                args.push( 'a[' + i + ']')\n            }\n\n            fns[len] = new Function(\n                            'c',\n                            'a',\n                            'return new c(' + args.join(',') + ')'\n                        )\n        }\n\n        return fns[len]\n    }\n\n}()", "var getInstantiatorFunction = require('./getInstantiatorFunction')\n\nmodule.exports = function(fn, args){\n\treturn getInstantiatorFunction(args.length)(fn, args)\n}", "'use strict';\n\nfunction ToObject(val) {\n\tif (val == null) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nmodule.exports = Object.assign || function (target, source) {\n\tvar from;\n\tvar keys;\n\tvar to = ToObject(target);\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = arguments[s];\n\t\tkeys = Object.keys(Object(from));\n\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tto[keys[i]] = from[keys[i]];\n\t\t}\n\t}\n\n\treturn to;\n};\n", "'use strict';\n\nmodule.exports = function(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n            value       : ctor,\n            enumerable  : false,\n            writable    : true,\n            configurable: true\n        }\n    })\n}", "'use strict';\n\n/**\n * @static\n * Returns true if the given region is valid, false otherwise.\n * @param  {Region} region The region to check\n * @return {Boolean}        True, if the region is valid, false otherwise.\n * A region is valid if\n *  * left <= right  &&\n *  * top  <= bottom\n */\nmodule.exports = function validate(region){\n\n    var isValid = true\n\n    if (region.right < region.left){\n        isValid = false\n        region.right = region.left\n    }\n\n    if (region.bottom < region.top){\n        isValid = false\n        region.bottom = region.top\n    }\n\n    return isValid\n}", "'use strict';\n\nvar hasOwn   = require('hasown')\nvar VALIDATE = require('./validate')\n\nmodule.exports = function(REGION){\n\n    var MAX = Math.max\n    var MIN = Math.min\n\n    var statics = {\n        init: function(){\n            var exportAsNonStatic = {\n                getIntersection      : true,\n                getIntersectionArea  : true,\n                getIntersectionHeight: true,\n                getIntersectionWidth : true,\n                getUnion             : true\n            }\n            var thisProto = REGION.prototype\n            var newName\n\n            var exportHasOwn = hasOwn(exportAsNonStatic)\n            var methodName\n\n            for (methodName in exportAsNonStatic) if (exportHasOwn(methodName)) {\n                newName = exportAsNonStatic[methodName]\n                if (typeof newName != 'string'){\n                    newName = methodName\n                }\n\n                ;(function(proto, methodName, protoMethodName){\n\n                    proto[methodName] = function(region){\n                        //<debug>\n                        if (!REGION[protoMethodName]){\n                            console.warn('cannot find method ', protoMethodName,' on ', REGION)\n                        }\n                        //</debug>\n                        return REGION[protoMethodName](this, region)\n                    }\n\n                })(thisProto, newName, methodName);\n            }\n        },\n\n        validate: VALIDATE,\n\n        /**\n         * Returns the region corresponding to the documentElement\n         * @return {Region} The region corresponding to the documentElement. This region is the maximum region visible on the screen.\n         */\n        getDocRegion: function(){\n            return REGION.fromDOM(document.documentElement)\n        },\n\n        from: function(reg){\n            if (reg.__IS_REGION){\n                return reg\n            }\n\n            if (typeof document != 'undefined'){\n                if (typeof HTMLElement != 'undefined' && reg instanceof HTMLElement){\n                    return REGION.fromDOM(reg)\n                }\n\n                if (reg.type && typeof reg.pageX !== 'undefined' && typeof reg.pageY !== 'undefined'){\n                    return REGION.fromEvent(reg)\n                }\n            }\n\n            return REGION(reg)\n        },\n\n        fromEvent: function(event){\n            return REGION.fromPoint({\n                x: event.pageX,\n                y: event.pageY\n            })\n        },\n\n        fromDOM: function(dom){\n            var rect = dom.getBoundingClientRect()\n            // var docElem = document.documentElement\n            // var win     = window\n\n            // var top  = rect.top + win.pageYOffset - docElem.clientTop\n            // var left = rect.left + win.pageXOffset - docElem.clientLeft\n\n            return new REGION({\n                top   : rect.top,\n                left  : rect.left,\n                bottom: rect.bottom,\n                right : rect.right\n            })\n        },\n\n        /**\n         * @static\n         * Returns a region that is the intersection of the given two regions\n         * @param  {Region} first  The first region\n         * @param  {Region} second The second region\n         * @return {Region/Boolean}        The intersection region or false if no intersection found\n         */\n        getIntersection: function(first, second){\n\n            var area = this.getIntersectionArea(first, second)\n\n            if (area){\n                return new REGION(area)\n            }\n\n            return false\n        },\n\n        getIntersectionWidth: function(first, second){\n            var minRight  = MIN(first.right, second.right)\n            var maxLeft   = MAX(first.left,  second.left)\n\n            if (maxLeft < minRight){\n                return minRight  - maxLeft\n            }\n\n            return 0\n        },\n\n        getIntersectionHeight: function(first, second){\n            var maxTop    = MAX(first.top,   second.top)\n            var minBottom = MIN(first.bottom,second.bottom)\n\n            if (maxTop  < minBottom){\n                return minBottom - maxTop\n            }\n\n            return 0\n        },\n\n        getIntersectionArea: function(first, second){\n            var maxTop    = MAX(first.top,   second.top)\n            var minRight  = MIN(first.right, second.right)\n            var minBottom = MIN(first.bottom,second.bottom)\n            var maxLeft   = MAX(first.left,  second.left)\n\n            if (\n                    maxTop  < minBottom &&\n                    maxLeft < minRight\n                ){\n                return {\n                    top    : maxTop,\n                    right  : minRight,\n                    bottom : minBottom,\n                    left   : maxLeft,\n\n                    width  : minRight  - maxLeft,\n                    height : minBottom - maxTop\n                }\n            }\n\n            return false\n        },\n\n        /**\n         * @static\n         * Returns a region that is the union of the given two regions\n         * @param  {Region} first  The first region\n         * @param  {Region} second The second region\n         * @return {Region}        The union region. The smallest region that contains both given regions.\n         */\n        getUnion: function(first, second){\n            var top    = MIN(first.top,   second.top)\n            var right  = MAX(first.right, second.right)\n            var bottom = MAX(first.bottom,second.bottom)\n            var left   = MIN(first.left,  second.left)\n\n            return new REGION(top, right, bottom, left)\n        },\n\n        /**\n         * @static\n         * Returns a region. If the reg argument is a region, returns it, otherwise return a new region built from the reg object.\n         *\n         * @param  {Region} reg A region or an object with either top, left, bottom, right or\n         * with top, left, width, height\n         * @return {Region} A region\n         */\n        getRegion: function(reg){\n            return REGION.from(reg)\n        },\n\n        /**\n         * Creates a region that corresponds to a point.\n         *\n         * @param  {Object} xy The point\n         * @param  {Number} xy.x\n         * @param  {Number} xy.y\n         *\n         * @return {Region}    The new region, with top==xy.y, bottom = xy.y and left==xy.x, right==xy.x\n         */\n        fromPoint: function(xy){\n            return new REGION({\n                        top    : xy.y,\n                        bottom : xy.y,\n                        left   : xy.x,\n                        right  : xy.x\n                    })\n        }\n    }\n\n    Object.keys(statics).forEach(function(key){\n        REGION[key] = statics[key]\n    })\n\n    REGION.init()\n}", "'use strict';\n\nvar hasOwn    = require('hasown')\nvar newify    = require('newify')\n\nvar assign      = require('object-assign');\nvar EventEmitter = require('events').EventEmitter\n\nvar inherits = require('./inherits')\nvar VALIDATE = require('./validate')\n\nvar objectToString = Object.prototype.toString\n\nvar isObject = function(value){\n    return objectToString.apply(value) === '[object Object]'\n}\n\nfunction copyList(source, target, list){\n    if (source){\n        list.forEach(function(key){\n            if (hasOwn(source, key)){\n                target[key] = source[key]\n            }\n        })\n    }\n\n    return target\n}\n\n/**\n * @class Region\n *\n * The Region is an abstraction that allows the developer to refer to rectangles on the screen,\n * and move them around, make diffs and unions, detect intersections, compute areas, etc.\n *\n * ## Creating a region\n *      var region = require('region')({\n *          top  : 10,\n *          left : 10,\n *          bottom: 100,\n *          right : 100\n *      })\n *      //this region is a square, 90x90, starting from (10,10) to (100,100)\n *\n *      var second = require('region')({ top: 10, left: 100, right: 200, bottom: 60})\n *      var union  = region.getUnion(second)\n *\n *      //the \"union\" region is a union between \"region\" and \"second\"\n */\n\nvar POINT_POSITIONS = {\n        cy: 'YCenter',\n        cx: 'XCenter',\n        t : 'Top',\n        tc: 'TopCenter',\n        tl: 'TopLeft',\n        tr: 'TopRight',\n        b : 'Bottom',\n        bc: 'BottomCenter',\n        bl: 'BottomLeft',\n        br: 'BottomRight',\n        l : 'Left',\n        lc: 'LeftCenter',\n        r : 'Right',\n        rc: 'RightCenter',\n        c : 'Center'\n    }\n\n/**\n * @constructor\n *\n * Construct a new Region.\n *\n * Example:\n *\n *      var r = new Region({ top: 10, left: 20, bottom: 100, right: 200 })\n *\n *      //or, the same, but with numbers (can be used with new or without)\n *\n *      r = Region(10, 200, 100, 20)\n *\n *      //or, with width and height\n *\n *      r = Region({ top: 10, left: 20, width: 180, height: 90})\n *\n * @param {Number|Object} top The top pixel position, or an object with top, left, bottom, right properties. If an object is passed,\n * instead of having bottom and right, it can have width and height.\n *\n * @param {Number} right The right pixel position\n * @param {Number} bottom The bottom pixel position\n * @param {Number} left The left pixel position\n *\n * @return {Region} this\n */\nvar REGION = function(top, right, bottom, left){\n\n    if (!(this instanceof REGION)){\n        return newify(REGION, arguments)\n    }\n\n    EventEmitter.call(this)\n\n    if (isObject(top)){\n        copyList(top, this, ['top','right','bottom','left'])\n\n        if (top.bottom == null && top.height != null){\n            this.bottom = this.top + top.height\n        }\n        if (top.right == null && top.width != null){\n            this.right = this.left + top.width\n        }\n\n        if (top.emitChangeEvents){\n            this.emitChangeEvents = top.emitChangeEvents\n        }\n    } else {\n        this.top    = top\n        this.right  = right\n        this.bottom = bottom\n        this.left   = left\n    }\n\n    this[0] = this.left\n    this[1] = this.top\n\n    VALIDATE(this)\n}\n\ninherits(REGION, EventEmitter)\n\nassign(REGION.prototype, {\n\n    /**\n     * @cfg {Boolean} emitChangeEvents If this is set to true, the region\n     * will emit 'changesize' and 'changeposition' whenever the size or the position changs\n     */\n    emitChangeEvents: false,\n\n    /**\n     * Returns this region, or a clone of this region\n     * @param  {Boolean} [clone] If true, this method will return a clone of this region\n     * @return {Region}       This region, or a clone of this\n     */\n    getRegion: function(clone){\n        return clone?\n                    this.clone():\n                    this\n    },\n\n    /**\n     * Sets the properties of this region to those of the given region\n     * @param {Region/Object} reg The region or object to use for setting properties of this region\n     * @return {Region} this\n     */\n    setRegion: function(reg){\n\n        if (reg instanceof REGION){\n            this.set(reg.get())\n        } else {\n            this.set(reg)\n        }\n\n        return this\n    },\n\n    /**\n     * Returns true if this region is valid, false otherwise\n     *\n     * @param  {Region} region The region to check\n     * @return {Boolean}        True, if the region is valid, false otherwise.\n     * A region is valid if\n     *  * left <= right  &&\n     *  * top  <= bottom\n     */\n    validate: function(){\n        return REGION.validate(this)\n    },\n\n    _before: function(){\n        if (this.emitChangeEvents){\n            return copyList(this, {}, ['left','top','bottom','right'])\n        }\n    },\n\n    _after: function(before){\n        if (this.emitChangeEvents){\n\n            if(this.top != before.top || this.left != before.left) {\n                this.emitPositionChange()\n            }\n\n            if(this.right != before.right || this.bottom != before.bottom) {\n                this.emitSizeChange()\n            }\n        }\n    },\n\n    notifyPositionChange: function(){\n        this.emit('changeposition', this)\n    },\n\n    emitPositionChange: function(){\n        this.notifyPositionChange()\n    },\n\n    notifySizeChange: function(){\n        this.emit('changesize', this)\n    },\n\n    emitSizeChange: function(){\n        this.notifySizeChange()\n    },\n\n    /**\n     * Add the given amounts to each specified side. Example\n     *\n     *      region.add({\n     *          top: 50,    //add 50 px to the top side\n     *          bottom: -100    //substract 100 px from the bottom side\n     *      })\n     *\n     * @param {Object} directions\n     * @param {Number} [directions.top]\n     * @param {Number} [directions.left]\n     * @param {Number} [directions.bottom]\n     * @param {Number} [directions.right]\n     *\n     * @return {Region} this\n     */\n    add: function(directions){\n\n        var before = this._before()\n        var direction\n\n        for (direction in directions) if ( hasOwn(directions, direction) ) {\n            this[direction] += directions[direction]\n        }\n\n        this[0] = this.left\n        this[1] = this.top\n\n        this._after(before)\n\n        return this\n    },\n\n    /**\n     * The same as {@link #add}, but substracts the given values\n     * @param {Object} directions\n     * @param {Number} [directions.top]\n     * @param {Number} [directions.left]\n     * @param {Number} [directions.bottom]\n     * @param {Number} [directions.right]\n     *\n     * @return {Region} this\n     */\n    substract: function(directions){\n\n        var before = this._before()\n        var direction\n\n        for (direction in directions) if (hasOwn(directions, direction) ) {\n            this[direction] -= directions[direction]\n        }\n\n        this[0] = this.left\n        this[1] = this.top\n\n        this._after(before)\n\n        return this\n    },\n\n    /**\n     * Retrieves the size of the region.\n     * @return {Object} An object with {width, height}, corresponding to the width and height of the region\n     */\n    getSize: function(){\n        return {\n            width  : this.width,\n            height : this.height\n        }\n    },\n\n    /**\n     * Move the region to the given position and keeps the region width and height.\n     *\n     * @param {Object} position An object with {top, left} properties. The values in {top,left} are used to move the region by the given amounts.\n     * @param {Number} [position.left]\n     * @param {Number} [position.top]\n     *\n     * @return {Region} this\n     */\n    setPosition: function(position){\n        var width  = this.width\n        var height = this.height\n\n        if (position.left != undefined){\n            position.right  = position.left + width\n        }\n\n        if (position.top != undefined){\n            position.bottom = position.top  + height\n        }\n\n        return this.set(position)\n    },\n\n    /**\n     * Sets both the height and the width of this region to the given size.\n     *\n     * @param {Number} size The new size for the region\n     * @return {Region} this\n     */\n    setSize: function(size){\n        if (size.height != undefined && size.width != undefined){\n            return this.set({\n                right  : this.left + size.width,\n                bottom : this.top  + size.height\n            })\n        }\n\n        if (size.width != undefined){\n            this.setWidth(size.width)\n        }\n\n        if (size.height != undefined){\n            this.setHeight(size.height)\n        }\n\n        return this\n    },\n\n\n\n    /**\n     * @chainable\n     *\n     * Sets the width of this region\n     * @param {Number} width The new width for this region\n     * @return {Region} this\n     */\n    setWidth: function(width){\n        return this.set({\n            right: this.left + width\n        })\n    },\n\n    /**\n     * @chainable\n     *\n     * Sets the height of this region\n     * @param {Number} height The new height for this region\n     * @return {Region} this\n     */\n    setHeight: function(height){\n        return this.set({\n            bottom: this.top + height\n        })\n    },\n\n    /**\n     * Sets the given properties on this region\n     *\n     * @param {Object} directions an object containing top, left, and EITHER bottom, right OR width, height\n     * @param {Number} [directions.top]\n     * @param {Number} [directions.left]\n     *\n     * @param {Number} [directions.bottom]\n     * @param {Number} [directions.right]\n     *\n     * @param {Number} [directions.width]\n     * @param {Number} [directions.height]\n     *\n     *\n     * @return {Region} this\n     */\n    set: function(directions){\n        var before = this._before()\n\n        copyList(directions, this, ['left','top','bottom','right'])\n\n        if (directions.bottom == null && directions.height != null){\n            this.bottom = this.top + directions.height\n        }\n        if (directions.right == null && directions.width != null){\n            this.right = this.left + directions.width\n        }\n\n        this[0] = this.left\n        this[1] = this.top\n\n        this._after(before)\n\n        return this\n    },\n\n    /**\n     * Retrieves the given property from this region. If no property is given, return an object\n     * with {left, top, right, bottom}\n     *\n     * @param {String} [dir] the property to retrieve from this region\n     * @return {Number/Object}\n     */\n    get: function(dir){\n        return dir? this[dir]:\n                    copyList(this, {}, ['left','right','top','bottom'])\n    },\n\n    /**\n     * Shifts this region to either top, or left or both.\n     * Shift is similar to {@link #add} by the fact that it adds the given dimensions to top/left sides, but also adds the given dimensions\n     * to bottom and right\n     *\n     * @param {Object} directions\n     * @param {Number} [directions.top]\n     * @param {Number} [directions.left]\n     *\n     * @return {Region} this\n     */\n    shift: function(directions){\n\n        var before = this._before()\n\n        if (directions.top){\n            this.top    += directions.top\n            this.bottom += directions.top\n        }\n\n        if (directions.left){\n            this.left  += directions.left\n            this.right += directions.left\n        }\n\n        this[0] = this.left\n        this[1] = this.top\n\n        this._after(before)\n\n        return this\n    },\n\n    /**\n     * Same as {@link #shift}, but substracts the given values\n     * @chainable\n     *\n     * @param {Object} directions\n     * @param {Number} [directions.top]\n     * @param {Number} [directions.left]\n     *\n     * @return {Region} this\n     */\n    unshift: function(directions){\n\n        if (directions.top){\n            directions.top *= -1\n        }\n\n        if (directions.left){\n            directions.left *= -1\n        }\n\n        return this.shift(directions)\n    },\n\n    /**\n     * Compare this region and the given region. Return true if they have all the same size and position\n     * @param  {Region} region The region to compare with\n     * @return {Boolean}       True if this and region have same size and position\n     */\n    equals: function(region){\n        return this.equalsPosition(region) && this.equalsSize(region)\n    },\n\n    /**\n     * Returns true if this region has the same bottom,right properties as the given region\n     * @param  {Region/Object} size The region to compare against\n     * @return {Boolean}       true if this region is the same size as the given size\n     */\n    equalsSize: function(size){\n        var isInstance = size instanceof REGION\n\n        var s = {\n            width: size.width == null && isInstance?\n                    size.getWidth():\n                    size.width,\n\n            height: size.height == null && isInstance?\n                    size.getHeight():\n                    size.height\n        }\n        return this.getWidth() == s.width && this.getHeight() == s.height\n    },\n\n    /**\n     * Returns true if this region has the same top,left properties as the given region\n     * @param  {Region} region The region to compare against\n     * @return {Boolean}       true if this.top == region.top and this.left == region.left\n     */\n    equalsPosition: function(region){\n        return this.top == region.top && this.left == region.left\n    },\n\n    /**\n     * Adds the given ammount to the left side of this region\n     * @param {Number} left The ammount to add\n     * @return {Region} this\n     */\n    addLeft: function(left){\n        var before = this._before()\n\n        this.left = this[0] = this.left + left\n\n        this._after(before)\n\n        return this\n    },\n\n    /**\n     * Adds the given ammount to the top side of this region\n     * @param {Number} top The ammount to add\n     * @return {Region} this\n     */\n    addTop: function(top){\n        var before = this._before()\n\n        this.top = this[1] = this.top + top\n\n        this._after(before)\n\n        return this\n    },\n\n    /**\n     * Adds the given ammount to the bottom side of this region\n     * @param {Number} bottom The ammount to add\n     * @return {Region} this\n     */\n    addBottom: function(bottom){\n        var before = this._before()\n\n        this.bottom += bottom\n\n        this._after(before)\n\n        return this\n    },\n\n    /**\n     * Adds the given ammount to the right side of this region\n     * @param {Number} right The ammount to add\n     * @return {Region} this\n     */\n    addRight: function(right){\n        var before = this._before()\n\n        this.right += right\n\n        this._after(before)\n\n        return this\n    },\n\n    /**\n     * Minimize the top side.\n     * @return {Region} this\n     */\n    minTop: function(){\n        return this.expand({top: 1})\n    },\n    /**\n     * Minimize the bottom side.\n     * @return {Region} this\n     */\n    maxBottom: function(){\n        return this.expand({bottom: 1})\n    },\n    /**\n     * Minimize the left side.\n     * @return {Region} this\n     */\n    minLeft: function(){\n        return this.expand({left: 1})\n    },\n    /**\n     * Maximize the right side.\n     * @return {Region} this\n     */\n    maxRight: function(){\n        return this.expand({right: 1})\n    },\n\n    /**\n     * Expands this region to the dimensions of the given region, or the document region, if no region is expanded.\n     * But only expand the given sides (any of the four can be expanded).\n     *\n     * @param {Object} directions\n     * @param {Boolean} [directions.top]\n     * @param {Boolean} [directions.bottom]\n     * @param {Boolean} [directions.left]\n     * @param {Boolean} [directions.right]\n     *\n     * @param {Region} [region] the region to expand to, defaults to the document region\n     * @return {Region} this region\n     */\n    expand: function(directions, region){\n        var docRegion = region || REGION.getDocRegion()\n        var list      = []\n        var direction\n        var before = this._before()\n\n        for (direction in directions) if ( hasOwn(directions, direction) ) {\n            list.push(direction)\n        }\n\n        copyList(docRegion, this, list)\n\n        this[0] = this.left\n        this[1] = this.top\n\n        this._after(before)\n\n        return this\n    },\n\n    /**\n     * Returns a clone of this region\n     * @return {Region} A new region, with the same position and dimension as this region\n     */\n    clone: function(){\n        return new REGION({\n                    top    : this.top,\n                    left   : this.left,\n                    right  : this.right,\n                    bottom : this.bottom\n                })\n    },\n\n    /**\n     * Returns true if this region contains the given point\n     * @param {Number/Object} x the x coordinate of the point\n     * @param {Number} [y] the y coordinate of the point\n     *\n     * @return {Boolean} true if this region constains the given point, false otherwise\n     */\n    containsPoint: function(x, y){\n        if (arguments.length == 1){\n            y = x.y\n            x = x.x\n        }\n\n        return this.left <= x  &&\n               x <= this.right &&\n               this.top <= y   &&\n               y <= this.bottom\n    },\n\n    /**\n     *\n     * @param region\n     *\n     * @return {Boolean} true if this region contains the given region, false otherwise\n     */\n    containsRegion: function(region){\n        return this.containsPoint(region.left, region.top)    &&\n               this.containsPoint(region.right, region.bottom)\n    },\n\n    /**\n     * Returns an object with the difference for {top, bottom} positions betwen this and the given region,\n     *\n     * See {@link #diff}\n     * @param  {Region} region The region to use for diff\n     * @return {Object}        {top,bottom}\n     */\n    diffHeight: function(region){\n        return this.diff(region, {top: true, bottom: true})\n    },\n\n    /**\n     * Returns an object with the difference for {left, right} positions betwen this and the given region,\n     *\n     * See {@link #diff}\n     * @param  {Region} region The region to use for diff\n     * @return {Object}        {left,right}\n     */\n    diffWidth: function(region){\n        return this.diff(region, {left: true, right: true})\n    },\n\n    /**\n     * Returns an object with the difference in sizes for the given directions, between this and region\n     *\n     * @param  {Region} region     The region to use for diff\n     * @param  {Object} directions An object with the directions to diff. Can have any of the following keys:\n     *  * left\n     *  * right\n     *  * top\n     *  * bottom\n     *\n     * @return {Object} and object with the same keys as the directions object, but the values being the\n     * differences between this region and the given region\n     */\n    diff: function(region, directions){\n        var result = {}\n        var dirName\n\n        for (dirName in directions) if ( hasOwn(directions, dirName) ) {\n            result[dirName] = this[dirName] - region[dirName]\n        }\n\n        return result\n    },\n\n    /**\n     * Returns the position, in {left,top} properties, of this region\n     *\n     * @return {Object} {left,top}\n     */\n    getPosition: function(){\n        return {\n            left: this.left,\n            top : this.top\n        }\n    },\n\n    /**\n     * Returns the point at the given position from this region.\n     *\n     * @param {String} position Any of:\n     *\n     *  * 'cx' - See {@link #getPointXCenter}\n     *  * 'cy' - See {@link #getPointYCenter}\n     *  * 'b'  - See {@link #getPointBottom}\n     *  * 'bc' - See {@link #getPointBottomCenter}\n     *  * 'l'  - See {@link #getPointLeft}F\n     *  * 'lc' - See {@link #getPointLeftCenter}\n     *  * 't'  - See {@link #getPointTop}\n     *  * 'tc' - See {@link #getPointTopCenter}\n     *  * 'r'  - See {@link #getPointRight}\n     *  * 'rc' - See {@link #getPointRightCenter}\n     *  * 'c'  - See {@link #getPointCenter}\n     *  * 'tl' - See {@link #getPointTopLeft}\n     *  * 'bl' - See {@link #getPointBottomLeft}\n     *  * 'br' - See {@link #getPointBottomRight}\n     *  * 'tr' - See {@link #getPointTopRight}\n     *\n     * @param {Boolean} asLeftTop\n     *\n     * @return {Object} either an object with {x,y} or {left,top} if asLeftTop is true\n     */\n    getPoint: function(position, asLeftTop){\n\n        //<debug>\n        if (!POINT_POSITIONS[position]) {\n            console.warn('The position ', position, ' could not be found! Available options are tl, bl, tr, br, l, r, t, b.');\n        }\n        //</debug>\n\n        var method = 'getPoint' + POINT_POSITIONS[position],\n            result = this[method]()\n\n        if (asLeftTop){\n            return {\n                left : result.x,\n                top  : result.y\n            }\n        }\n\n        return result\n    },\n\n    /**\n     * Returns a point with x = null and y being the middle of the left region segment\n     * @return {Object} {x,y}\n     */\n    getPointYCenter: function(){\n        return { x: null, y: this.top + this.getHeight() / 2 }\n    },\n\n    /**\n     * Returns a point with y = null and x being the middle of the top region segment\n     * @return {Object} {x,y}\n     */\n    getPointXCenter: function(){\n        return { x: this.left + this.getWidth() / 2, y: null }\n    },\n\n    /**\n     * Returns a point with x = null and y the region top position on the y axis\n     * @return {Object} {x,y}\n     */\n    getPointTop: function(){\n        return { x: null, y: this.top }\n    },\n\n    /**\n     * Returns a point that is the middle point of the region top segment\n     * @return {Object} {x,y}\n     */\n    getPointTopCenter: function(){\n        return { x: this.left + this.getWidth() / 2, y: this.top }\n    },\n\n    /**\n     * Returns a point that is the top-left point of the region\n     * @return {Object} {x,y}\n     */\n    getPointTopLeft: function(){\n        return { x: this.left, y: this.top}\n    },\n\n    /**\n     * Returns a point that is the top-right point of the region\n     * @return {Object} {x,y}\n     */\n    getPointTopRight: function(){\n        return { x: this.right, y: this.top}\n    },\n\n    /**\n     * Returns a point with x = null and y the region bottom position on the y axis\n     * @return {Object} {x,y}\n     */\n    getPointBottom: function(){\n        return { x: null, y: this.bottom }\n    },\n\n    /**\n     * Returns a point that is the middle point of the region bottom segment\n     * @return {Object} {x,y}\n     */\n    getPointBottomCenter: function(){\n        return { x: this.left + this.getWidth() / 2, y: this.bottom }\n    },\n\n    /**\n     * Returns a point that is the bottom-left point of the region\n     * @return {Object} {x,y}\n     */\n    getPointBottomLeft: function(){\n        return { x: this.left, y: this.bottom}\n    },\n\n    /**\n     * Returns a point that is the bottom-right point of the region\n     * @return {Object} {x,y}\n     */\n    getPointBottomRight: function(){\n        return { x: this.right, y: this.bottom}\n    },\n\n    /**\n     * Returns a point with y = null and x the region left position on the x axis\n     * @return {Object} {x,y}\n     */\n    getPointLeft: function(){\n        return { x: this.left, y: null }\n    },\n\n    /**\n     * Returns a point that is the middle point of the region left segment\n     * @return {Object} {x,y}\n     */\n    getPointLeftCenter: function(){\n        return { x: this.left, y: this.top + this.getHeight() / 2 }\n    },\n\n    /**\n     * Returns a point with y = null and x the region right position on the x axis\n     * @return {Object} {x,y}\n     */\n    getPointRight: function(){\n        return { x: this.right, y: null }\n    },\n\n    /**\n     * Returns a point that is the middle point of the region right segment\n     * @return {Object} {x,y}\n     */\n    getPointRightCenter: function(){\n        return { x: this.right, y: this.top + this.getHeight() / 2 }\n    },\n\n    /**\n     * Returns a point that is the center of the region\n     * @return {Object} {x,y}\n     */\n    getPointCenter: function(){\n        return { x: this.left + this.getWidth() / 2, y: this.top + this.getHeight() / 2 }\n    },\n\n    /**\n     * @return {Number} returns the height of the region\n     */\n    getHeight: function(){\n        return this.bottom - this.top\n    },\n\n    /**\n     * @return {Number} returns the width of the region\n     */\n    getWidth: function(){\n        return this.right - this.left\n    },\n\n    /**\n     * @return {Number} returns the top property of the region\n     */\n    getTop: function(){\n        return this.top\n    },\n\n    /**\n     * @return {Number} returns the left property of the region\n     */\n    getLeft: function(){\n        return this.left\n    },\n\n    /**\n     * @return {Number} returns the bottom property of the region\n     */\n    getBottom: function(){\n        return this.bottom\n    },\n\n    /**\n     * @return {Number} returns the right property of the region\n     */\n    getRight: function(){\n        return this.right\n    },\n\n    /**\n     * Returns the area of the region\n     * @return {Number} the computed area\n     */\n    getArea: function(){\n        return this.getWidth() * this.getHeight()\n    },\n\n    constrainTo: function(contrain){\n        var intersect = this.getIntersection(contrain)\n        var shift\n\n        if (!intersect || !intersect.equals(this)){\n\n            var contrainWidth  = contrain.getWidth(),\n                contrainHeight = contrain.getHeight()\n\n            if (this.getWidth() > contrainWidth){\n                this.left = contrain.left\n                this.setWidth(contrainWidth)\n            }\n\n            if (this.getHeight() > contrainHeight){\n                this.top = contrain.top\n                this.setHeight(contrainHeight)\n            }\n\n            shift = {}\n\n            if (this.right > contrain.right){\n                shift.left = contrain.right - this.right\n            }\n\n            if (this.bottom > contrain.bottom){\n                shift.top = contrain.bottom - this.bottom\n            }\n\n            if (this.left < contrain.left){\n                shift.left = contrain.left - this.left\n            }\n\n            if (this.top < contrain.top){\n                shift.top = contrain.top - this.top\n            }\n\n            this.shift(shift)\n\n            return true\n        }\n\n        return false\n    },\n\n    __IS_REGION: true\n\n    /**\n     * @property {Number} top\n     */\n\n    /**\n     * @property {Number} right\n     */\n\n    /**\n     * @property {Number} bottom\n     */\n\n    /**\n     * @property {Number} left\n     */\n\n    /**\n     * @property {Number} [0] the top property\n     */\n\n    /**\n     * @property {Number} [1] the left property\n     */\n\n    /**\n     * @method getIntersection\n     * Returns a region that is the intersection of this region and the given region\n     * @param  {Region} region The region to intersect with\n     * @return {Region}        The intersection region\n     */\n\n    /**\n     * @method getUnion\n     * Returns a region that is the union of this region with the given region\n     * @param  {Region} region  The region to make union with\n     * @return {Region}        The union region. The smallest region that contains both this and the given region.\n     */\n\n})\n\nObject.defineProperties(REGION.prototype, {\n    width: {\n        get: function(){\n            return this.getWidth()\n        },\n        set: function(width){\n            return this.setWidth(width)\n        }\n    },\n    height: {\n        get: function(){\n            return this.getHeight()\n        },\n        set: function(height){\n            return this.setHeight(height)\n        }\n    }\n})\n\nrequire('./statics')(REGION)\n\nmodule.exports = REGION", "module.exports = require('./src')", "'use strict'\n\nvar Region = require('region')\n\n/**\n * @static\n * Aligns the source region to the target region, so as to correspond to the given alignment.\n *\n * NOTE that this method makes changes on the sourceRegion in order for it to be aligned as specified.\n *\n * @param {Region} sourceRegion\n * @param {Region} targetRegion\n *\n * @param {String} align A string with 2 valid align positions, eg: 'tr-bl'.\n * For valid positions, see {@link Region#getPoint}\n *\n * Having 2 regions, we need to be able to align them as we wish:\n *\n * for example, if we have\n *\n *       source    target\n *       ________________\n *       ____\n *      |    |     ________\n *      |____|    |        |\n *                |        |\n *                |________|\n *\n * and we align 't-t', we get:\n *\n *       source    target\n *       _________________\n *\n *       ____      ________\n *      |    |    |        |\n *      |____|    |        |\n *                |________|\n *\n *  In this case, the source was moved down to be aligned to the top of the target\n *\n *\n * and if we align 'tc-tc' we get\n *\n *       source     target\n *       __________________\n *\n *                 ________\n *                | |    | |\n *                | |____| |\n *                |________|\n *\n *  Since the source was moved to have the top-center point to be the same with target top-center\n *\n *\n *\n * @return {RegionClass} The Region class\n */\nRegion.align = function(sourceRegion, targetRegion, align){\n\n    targetRegion = Region.from(targetRegion)\n\n    align = (align || 'c-c').split('-')\n\n    //<debug>\n    if (align.length != 2){\n        console.warn('Incorrect region alignment! The align parameter need to be in the form \\'br-c\\', that is, a - separated string!', align)\n    }\n    //</debug>\n\n    return Region.alignToPoint(sourceRegion, targetRegion.getPoint(align[1]), align[0])\n}\n\n/**\n * Modifies the given region to be aligned to the point, as specified by anchor\n *\n * @param {Region} region The region to align to the point\n * @param {Object} point The point to be used as a reference\n * @param {Number} point.x\n * @param {Number} point.y\n * @param {String} anchor The position where to anchor the region to the point. See {@link #getPoint} for available options/\n *\n * @return {Region} the given region\n */\nRegion.alignToPoint = function(region, point, anchor){\n\n    region = Region.from(region)\n\n    var sourcePoint = region.getPoint(anchor)\n    var count       = 0\n    var shiftObj    = {}\n\n    if (\n            sourcePoint.x != null &&\n            point.x != null\n        ){\n\n            count++\n            shiftObj.left = point.x - sourcePoint.x\n    }\n\n    if (\n            sourcePoint.y != null &&\n            point.y != null\n        ){\n            count++\n            shiftObj.top = point.y - sourcePoint.y\n    }\n\n    if (count){\n\n        region.shift(shiftObj)\n\n    }\n\n    return region\n}", "'use strict';\n\nvar Region = require('region')\n\n/**\n *\n * Aligns this region to the given region\n * @param {Region} region\n * @param {String} alignPositions For available positions, see {@link #getPoint}\n *\n *     eg: 'tr-bl'\n *\n * @return this\n */\nRegion.prototype.alignToRegion = function(region, alignPositions){\n    Region.align(this, region, alignPositions)\n\n    return this\n}\n\n/**\n * Aligns this region to the given point, in the anchor position\n * @param {Object} point eg: {x: 20, y: 600}\n * @param {Number} point.x\n * @param {Number} point.y\n *\n * @param {String} anchor For available positions, see {@link #getPoint}\n *\n *     eg: 'bl'\n *\n * @return this\n */\n Region.prototype.alignToPoint = function(point, anchor){\n    Region.alignToPoint(this, point, anchor)\n\n    return this\n}", "'use strict'\n\nvar Region = require('region')\n\n/**\n *\n * This method is trying to align the sourceRegion to the targetRegion, given the alignment positions\n * and the offsets. It only modifies the sourceRegion\n *\n * This is all well and easy, but if there is a constrainTo region, the algorithm has to take it into account.\n * In this case, it works as follows.\n *\n *  * start with the first alignment position. Aligns the region, adds the offset and then check for the constraint.\n *  * if the constraint condition is ok, return the position.\n *  * otherwise, remember the intersection area, if the regions are intersecting.\n *  * then go to the next specified align position, and so on, computing the maximum intersection area.\n *\n * If no alignment fits the constrainRegion, the sourceRegion will be resized to match it,\n * using the position with the maximum intersection area.\n *\n * Since we have computed the index of the position with the max intersection area, take that position,\n * and align the sourceRegion accordingly. Then resize the sourceRegion to the intersection, and reposition\n * it again, since resizing it might have destroyed the alignment.\n *\n * Return the position.\n *\n * @param {Region} sourceRegion\n * @param {Region} targetRegion\n * @param {String[]} positions\n * @param {Object} config\n * @param {Array} config.offset\n * @param {Region} config.constrain\n * @param {Boolean/Object} config.sync\n *\n * @return {String/Undefined} the chosen position for the alignment, or undefined if no position found\n */\nfunction ALIGN_TO_NORMALIZED(sourceRegion, targetRegion, positions, config){\n\n    targetRegion = Region.from(targetRegion)\n\n    config = config  || {}\n\n    var constrainTo = config.constrain,\n        syncOption  = config.sync,\n        offsets     = config.offset || [],\n        syncWidth   = false,\n        syncHeight  = false,\n        sourceClone = sourceRegion.clone()\n\n    /*\n     * Prepare the method arguments: positions, offsets, constrain and sync options\n     */\n    if (!Array.isArray(positions)){\n        positions = positions? [positions]: []\n    }\n\n    if (!Array.isArray(offsets)){\n        offsets = offsets? [offsets]: []\n    }\n\n    if (constrainTo){\n        constrainTo = constrainTo === true?\n                                Region.getDocRegion():\n                                constrainTo.getRegion()\n    }\n\n    if (syncOption){\n\n        if (syncOption.size){\n            syncWidth  = true\n            syncHeight = true\n        } else {\n            syncWidth  = syncOption === true?\n                            true:\n                            syncOption.width || false\n\n            syncHeight = syncOption === true?\n                            true:\n                            syncOption.height || false\n        }\n    }\n\n    if (syncWidth){\n        sourceClone.setWidth(targetRegion.getWidth())\n    }\n    if (syncHeight){\n        sourceClone.setHeight(targetRegion.getHeight())\n\n    }\n\n    var offset,\n        i = 0,\n        len = positions.length,\n        pos,\n        intersection,\n        itArea,\n        maxArea = -1,\n        maxAreaIndex = -1\n\n    for (; i < len; i++){\n        pos     = positions[i]\n        offset  = offsets[i]\n\n        sourceClone.alignToRegion(targetRegion, pos)\n\n        if (offset){\n            if (!Array.isArray(offset)){\n                offset = offsets[i] = [offset.x || offset.left, offset.y || offset.top]\n            }\n\n            sourceClone.shift({\n                left: offset[0],\n                top : offset[1]\n            })\n        }\n\n        //the source region is already aligned in the correct position\n\n        if (constrainTo){\n            //if we have a constrain region, test for the constrain\n            intersection = sourceClone.getIntersection(constrainTo)\n\n            if ( intersection && intersection.equals(sourceClone) ) {\n                //constrain respected, so return (the aligned position)\n\n                sourceRegion.set(sourceClone)\n                return pos\n            } else {\n\n                //the constrain was not respected, so continue trying\n                if (intersection && ((itArea = intersection.getArea()) > maxArea)){\n                    maxArea      = itArea\n                    maxAreaIndex = i\n                }\n            }\n\n        } else {\n            sourceRegion.set(sourceClone)\n            return pos\n        }\n    }\n\n    //no alignment respected the constraints\n    if (~maxAreaIndex){\n        pos     = positions[maxAreaIndex]\n        offset  = offsets[maxAreaIndex]\n\n        sourceClone.alignToRegion(targetRegion, pos)\n\n        if (offset){\n            sourceClone.shift({\n                left: offset[0],\n                top : offset[1]\n            })\n        }\n\n        //we are sure an intersection exists, because of the way the maxAreaIndex was computed\n        intersection = sourceClone.getIntersection(constrainTo)\n\n        sourceClone.setRegion(intersection)\n        sourceClone.alignToRegion(targetRegion, pos)\n\n        if (offset){\n            sourceClone.shift({\n                left: offset[0],\n                top : offset[1]\n            })\n        }\n\n        sourceRegion.set(sourceClone)\n\n        return pos\n    }\n\n}\n\nmodule.exports = ALIGN_TO_NORMALIZED", "'use strict'\n\nvar ALIGN_TO_NORMALIZED = require('./alignToNormalized')\n\nvar Region = require('region')\n\n/**\n * @localdoc Given source and target regions, and the given alignments required, returns a region that is the resulting allignment.\n * Does not modify the sourceRegion.\n *\n * Example\n *\n *      var sourceRegion = zippy.getInstance({\n *          alias  : 'z.region',\n *          top    : 10,\n *          left   : 10,\n *          bottom : 40,\n *          right  : 100\n *      })\n *\n *      var targetRegion = zippy.getInstance({\n *          alias  : 'z.region',\n *          top    : 10,\n *          left   : 10,\n *          bottom : 40,\n *          right  : 100\n *      })\n *      //has top-left at (10,10)\n *      //and bottom-right at (40, 100)\n *\n *      var alignRegion = alignable.COMPUTE_ALIGN_REGION(sourceRegion, targetRegion, 'tl-br')\n *\n *      //alignRegion will be a clone of sourceRegion, but will have the\n *      //top-left corner aligned with bottom-right of targetRegion\n *\n *      alignRegion.get() // => { top: 40, left: 100, bottom: 70, right: 190 }\n *\n * @param  {Region} sourceRegion The source region to align to targetRegion\n * @param  {Region} targetRegion The target region to which to align the sourceRegion\n * @param  {String/String[]} positions    A string ( delimited by \"-\" characters ) or an array of strings with the position to try, in the order of their priority.\n * See Region#getPoint for a list of available positions. They can be combined in any way.\n * @param  {Object} config      A config object with other configuration for the alignment\n * @param  {Object/Object[]} config.offset      Optional offsets. Either an object or an array with a different offset for each position\n * @param  {Element/Region/Boolean} config.constrain  The constrain to region or element. If the boolean true, Region.getDocRegion() will be used\n * @param  {Object/Boolean} config.sync   A boolean object that indicates whether to sync sourceRegion and targetRegion sizes (width/height or both). Can be\n *\n *  * true - in order to sync both width and height\n *  * { width: true }  - to only sync width\n *  * { height: true } - to only sync height\n *  * { size: true }   - to sync both width and height\n *\n * @return {Object} an object with the following keys:\n *\n *  * position - the position where the alignment was made. One of the given positions\n *  * region   - the region where the alignment is in place\n *  * positionChanged - boolean value indicating if the position of the returned region is different from the position of sourceRegion\n *  * widthChanged    - boolean value indicating if the width of the returned region is different from the width of sourceRegion\n *  * heightChanged   - boolean value indicating if the height of the returned region is different from the height of sourceRegion\n */\nfunction COMPUTE_ALIGN_REGION(sourceRegion, targetRegion, positions, config){\n    sourceRegion = Region.from(sourceRegion)\n\n    var sourceClone = sourceRegion.clone()\n    var position    = ALIGN_TO_NORMALIZED(sourceClone, targetRegion, positions, config)\n\n    return {\n        position        : position,\n        region          : sourceClone,\n        widthChanged    : sourceClone.getWidth() != sourceRegion.getWidth(),\n        heightChanged   : sourceClone.getHeight() != sourceRegion.getHeight(),\n        positionChanged : sourceClone.equalsPosition(sourceRegion)\n    }\n}\n\n\nmodule.exports = COMPUTE_ALIGN_REGION", "'use strict';\n\nvar Region = require('region')\n\nrequire('./Region.static')\nrequire('./Region.proto')\n\nvar COMPUTE_ALIGN_REGION = require('./computeAlignRegion')\n\n/**\n * region-align module exposes methods for aligning {@link Element} and {@link Region} instances\n *\n * The #alignTo method aligns this to the target element/region using the specified positions. See #alignTo for a graphical example.\n *\n *\n *      var div = Element.select('div.first')\n *\n *      div.alignTo(Element.select('body') , 'br-br')\n *\n *      //aligns the div to be in the bottom-right corner of the body\n *\n * Other useful methods\n *\n *  * {@link #alignRegions} - aligns a given source region to a target region\n *  * {@link #COMPUTE_ALIGN_REGION} - given a source region and a target region, and alignment positions, returns a clone of the source region, but aligned to satisfy the given alignments\n */\n\n\n/**\n * Aligns sourceRegion to targetRegion. It modifies the sourceRegion in order to perform the correct alignment.\n * See #COMPUTE_ALIGN_REGION for details and examples.\n *\n * This method calls #COMPUTE_ALIGN_REGION passing to it all its arguments. The #COMPUTE_ALIGN_REGION method returns a region that is properly aligned.\n * If this returned region position/size differs from sourceRegion, then the sourceRegion is modified to be an exact copy of the aligned region.\n *\n * @inheritdoc #COMPUTE_ALIGN_REGION\n * @return {String} the position used for alignment\n */\nRegion.alignRegions = function(sourceRegion, targetRegion, positions, config){\n\n    var result        = COMPUTE_ALIGN_REGION(sourceRegion, targetRegion, positions, config)\n    var alignedRegion = result.region\n\n    if ( !alignedRegion.equals(sourceRegion) ) {\n        sourceRegion.setRegion(alignedRegion)\n    }\n\n    return result.position\n\n}\n\n    /**\n     *\n     * The #alignTo method aligns this to the given target region, using the specified alignment position(s).\n     * You can also specify a constrain for the alignment.\n     *\n     * Example\n     *\n     *      BIG\n     *      ________________________\n     *      |  _______              |\n     *      | |       |             |\n     *      | |   A   |             |\n     *      | |       |      _____  |\n     *      | |_______|     |     | |\n     *      |               |  B  | |\n     *      |               |     | |\n     *      |_______________|_____|_|\n     *\n     * Assume the *BIG* outside rectangle is our constrain region, and you want to align the *A* rectangle\n     * to the *B* rectangle. Ideally, you'll want their tops to be aligned, and *A* to be placed at the right side of *B*\n     *\n     *\n     *      //so we would align them using\n     *\n     *      A.alignTo(B, 'tl-tr', { constrain: BIG })\n     *\n     * But this would result in\n     *\n     *       BIG\n     *      ________________________\n     *      |                       |\n     *      |                       |\n     *      |                       |\n     *      |                _____ _|_____\n     *      |               |     | .     |\n     *      |               |  B  | . A   |\n     *      |               |     | .     |\n     *      |_______________|_____|_._____|\n     *\n     *\n     * Which is not what we want. So we specify an array of options to try\n     *\n     *      A.alignTo(B, ['tl-tr', 'tr-tl'], { constrain: BIG })\n     *\n     * So by this we mean: try to align A(top,left) with B(top,right) and stick to the BIG constrain. If this is not possible,\n     * try the next option: align A(top,right) with B(top,left)\n     *\n     * So this is what we end up with\n     *\n     *      BIG\n     *      ________________________\n     *      |                       |\n     *      |                       |\n     *      |                       |\n     *      |        _______ _____  |\n     *      |       |       |     | |\n     *      |       |   A   |  B  | |\n     *      |       |       |     | |\n     *      |_______|_______|_____|_|\n     *\n     *\n     * Which is a lot better!\n     *\n     * @param {Element/Region} target The target to which to align this alignable.\n     *\n     * @param {String[]/String} positions The positions for the alignment.\n     *\n     * Example:\n     *\n     *      'br-tl'\n     *      ['br-tl','br-tr','cx-tc']\n     *\n     * This method will try to align using the first position. But if there is a constrain region, that position might not satisfy the constrain.\n     * If this is the case, the next positions will be tried. If one of them satifies the constrain, it will be used for aligning and it will be returned from this method.\n     *\n     * If no position matches the contrain, the one with the largest intersection of the source region with the constrain will be used, and this alignable will be resized to fit the constrain region.\n     *\n     * @param {Object} config A config object with other configuration for this method\n     *\n     * @param {Array[]/Object[]/Object} config.offset The offset to use for aligning. If more that one offset is specified, then offset at a given index is used with the position at the same index.\n     *\n     * An offset can have the following form:\n     *\n     *      [left_offset, top_offset]\n     *      {left: left_offset, top: top_offset}\n     *      {x: left_offset, y: top_offset}\n     *\n     * You can pass one offset or an array of offsets. In case you pass just one offset,\n     * it cannot have the array form, so you cannot call\n     *\n     *      this.alignTo(target, positions, [10, 20])\n     *\n     * If you do, it will not be considered. Instead, please use\n     *\n     *      this.alignTo(target, positions, {x: 10, y: 20})\n     *\n     * Or\n     *\n     *      this.alignTo(target, positions, [[10, 20]] )\n     *\n     * @param {Boolean/Element/Region} config.constrain If boolean, target will be constrained to the document region, otherwise,\n     * getRegion will be called on this argument to determine the region we need to constrain to.\n     *\n     * @param {Boolean/Object} config.sync Either boolean or an object with {width, height}. If it is boolean,\n     * both width and height will be synced. If directions are specified, will only sync the direction which is specified as true\n     *\n     * @return {String}\n     *\n     */\nRegion.prototype.alignTo = function(target, positions, config){\n\n    config = config || {}\n\n    var sourceRegion = this\n    var targetRegion = Region.from(target)\n\n    var result = COMPUTE_ALIGN_REGION(sourceRegion, targetRegion, positions, config)\n    var resultRegion = result.region\n\n    if (!resultRegion.equalsSize(sourceRegion)){\n        this.setSize(resultRegion.getSize())\n    }\n    if (!resultRegion.equalsPosition(sourceRegion)){\n        this.setPosition(resultRegion.getPosition(), { absolute: !!config.absolute })\n    }\n\n    return result.position\n}\n\nmodule.exports = Region", "module.exports = 'ontouchstart' in global || (global.DocumentTouch && document instanceof DocumentTouch)", "'use once'\n\nmodule.exports = function once(fn, scope){\n\n    var called\n    var result\n\n    return function(){\n        if (called){\n            return result\n        }\n\n        called = true\n\n        return result = fn.apply(scope || this, arguments)\n    }\n}", "'use strict';\n\nvar assign   = require('object-assign')\nvar Region   = require('region-align')\nvar hasTouch = require('has-touch')\nvar once     = require('./utils/once')\n\nvar mobileTest = global.navigator ?\n    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(global.navigator.userAgent) :\n    false\n\nvar isMobile = hasTouch && mobileTest;\n\nvar Helper = function(config){\n    this.config = config\n}\n\nvar EVENTS = {\n    move: isMobile? 'touchmove': 'mousemove',\n    up  : isMobile? 'touchend' : 'mouseup'\n}\n\nfunction emptyFn(){}\n\nfunction getPageCoords(event){\n    var firstTouch\n\n    var pageX = event.pageX\n    var pageY = event.pageY\n\n    if (isMobile && event.touches && (firstTouch = event.touches[0])){\n        pageX = firstTouch.pageX\n        pageY = firstTouch.pageY\n    }\n\n    return {\n        pageX: pageX,\n        pageY: pageY\n    }\n}\n\nassign(Helper.prototype, {\n\n    /**\n     * Should be called on a mousedown event\n     *\n     * @param  {Event} event\n     * @return {[type]}       [description]\n     */\n    initDrag: function(event) {\n\n        this.onDragInit(event)\n\n        var events = this.config.events || EVENTS\n\n        var onDragStart = once(this.onDragStart, this)\n        var target = isMobile?\n                        event.target:\n                        global\n\n        var mouseMoveListener = (function(event){\n            onDragStart(event)\n            this.onDrag(event)\n        }).bind(this)\n\n        var mouseUpListener = (function(event){\n\n            this.onDrop(event)\n\n            target.removeEventListener(events.move, mouseMoveListener)\n            target.removeEventListener(events.up, mouseUpListener)\n        }).bind(this)\n\n        target.addEventListener(events.move, mouseMoveListener, false)\n        target.addEventListener(events.up, mouseUpListener)\n    },\n\n    onDragInit: function(event){\n\n        var config = {\n            diff: {\n                left: 0,\n                top : 0\n            }\n        }\n        this.state = {\n            config: config\n        }\n\n        if (this.config.region){\n            this.state.initialRegion = Region.from(this.config.region)\n            this.state.dragRegion =\n                config.dragRegion =\n                    this.state.initialRegion.clone()\n        }\n        if (this.config.constrainTo){\n            this.state.constrainTo = Region.from(this.config.constrainTo)\n        }\n\n        this.callConfig('onDragInit', event)\n    },\n\n    /**\n     * Called when the first mousemove event occurs after drag is initialized\n     * @param  {Event} event\n     */\n    onDragStart: function(event){\n        this.state.initPageCoords = getPageCoords(event)\n\n        this.state.didDrag = this.state.config.didDrag = true\n        this.callConfig('onDragStart', event)\n    },\n\n    /**\n     * Called on all mousemove events after drag is initialized.\n     *\n     * @param  {Event} event\n     */\n    onDrag: function(event){\n\n        var config = this.state.config\n\n        var initPageCoords = this.state.initPageCoords\n        var eventCoords = getPageCoords(event)\n\n        var diff = config.diff = {\n            left: eventCoords.pageX - initPageCoords.pageX,\n            top : eventCoords.pageY - initPageCoords.pageY\n        }\n\n        if (this.state.initialRegion){\n            var dragRegion = config.dragRegion\n\n            //set the dragRegion to initial coords\n            dragRegion.set(this.state.initialRegion)\n\n            //shift it to the new position\n            dragRegion.shift(diff)\n\n            if (this.state.constrainTo){\n                //and finally constrain it if it's the case\n                var boolConstrained = dragRegion.constrainTo(this.state.constrainTo)\n\n                diff.left = dragRegion.left - this.state.initialRegion.left\n                diff.top  = dragRegion.top  - this.state.initialRegion.top\n\n                // console.log(diff);\n            }\n\n            config.dragRegion = dragRegion\n        }\n\n        this.callConfig('onDrag', event)\n    },\n\n    /**\n     * Called on the mouseup event on window\n     *\n     * @param  {Event} event\n     */\n    onDrop: function(event){\n        this.callConfig('onDrop', event)\n\n        this.state = null\n    },\n\n    callConfig: function(fnName, event){\n        var config = this.state.config\n        var args   = [event, config]\n\n        var fn = this.config[fnName]\n\n        if (fn){\n            fn.apply(this, args)\n        }\n    }\n\n})\n\nmodule.exports = function(event, config){\n\n    if (config.scope){\n        var skippedKeys = {\n            scope      : 1,\n            region     : 1,\n            constrainTo: 1\n        }\n\n        Object.keys(config).forEach(function(key){\n            var value = config[key]\n\n            if (key in skippedKeys){\n                return\n            }\n\n            if (typeof value == 'function'){\n                config[key] = value.bind(config.scope)\n            }\n        })\n    }\n    var helper = new Helper(config)\n\n    helper.initDrag(event)\n\n    return helper\n}", "import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"className\", \"hueStyle\", \"hueHeight\", \"hueMargin\", \"hueWidth\", \"defaultColor\", \"value\", \"saturationHeight\", \"saturationWidth\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport HueSpectrum from './HueSpectrum';\nimport SaturationSpectrum from './SaturationSpectrum';\nimport toColorValue from './utils/toColorValue';\nimport toStringValue from './utils/toStringValue';\nimport DEFAULT_COLOR from './defaultColor';\n\nvar ColorPicker = /*#__PURE__*/function (_Component) {\n  _inherits(ColorPicker, _Component);\n\n  var _super = _createSuper(ColorPicker);\n\n  // eslint-disable-next-line react/static-property-placement\n  // eslint-disable-next-line react/static-property-placement\n  function ColorPicker(props) {\n    var _this;\n\n    _classCallCheck(this, ColorPicker);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSaturationChange\", function (color) {\n      _this.handleChange(color);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleHueChange\", function (color) {\n      _this.handleChange(color);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleHueDrag\", function (hsv) {\n      _this.setState({\n        dragHue: hsv.h\n      });\n\n      _this.handleDrag(hsv);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSaturationDrag\", function (hsv) {\n      _this.handleDrag(hsv);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleHueMouseDown\", function (hsv) {\n      _this.setState({\n        dragHue: hsv.h\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSaturationMouseDown\", function (hsv) {\n      _this.setState({\n        dragHue: hsv.h\n      });\n    });\n\n    _this.state = {\n      dragHue: null\n    };\n    return _this;\n  }\n\n  _createClass(ColorPicker, [{\n    key: \"handleDrag\",\n    value: function handleDrag(color) {\n      var onDrag = this.props.onDrag;\n      onDrag(toStringValue(color), color);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(color) {\n      var onChange = this.props.onChange;\n      this.setState({\n        dragHue: null\n      });\n\n      var newColor = _objectSpread({}, color);\n\n      var value = toStringValue(newColor);\n      onChange(value, newColor);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n\n      var propsClassName = props.className,\n          propsHueStyle = props.hueStyle,\n          hueHeight = props.hueHeight,\n          hueMargin = props.hueMargin,\n          hueWidth = props.hueWidth,\n          defaultColor = props.defaultColor,\n          propsValue = props.value,\n          saturationHeight = props.saturationHeight,\n          saturationWidth = props.saturationWidth,\n          divProps = _objectWithoutProperties(props, _excluded);\n\n      var dragHue = this.state.dragHue;\n      var className = cx(propsClassName, 'cp react-color-picker');\n\n      var hueStyle = _objectSpread(_objectSpread({}, propsHueStyle), {}, {\n        marginLeft: hueMargin\n      });\n\n      var value = toColorValue(propsValue || defaultColor);\n      var children = props.children;\n      var hueSpectrumProps = null;\n      var saturationSpectrumProps = null;\n\n      if (children) {\n        children = React.Children.toArray(children).forEach(function (child) {\n          if (child && child.props) {\n            if (child.props.isHueSpectrum) {\n              hueSpectrumProps = _objectSpread({}, child.props);\n            }\n\n            if (child.props.isSaturationSpectrum) {\n              saturationSpectrumProps = _objectSpread({}, child.props);\n            }\n          }\n        });\n      }\n\n      var saturationConfig = _objectSpread({\n        onDrag: this.handleSaturationDrag,\n        onChange: this.handleSaturationChange,\n        onMouseDown: this.handleSaturationMouseDown\n      }, saturationSpectrumProps);\n\n      if (saturationConfig.width === undefined) {\n        saturationConfig.width = saturationWidth;\n      }\n\n      if (saturationConfig.height === undefined) {\n        saturationConfig.height = saturationHeight;\n      }\n\n      saturationConfig.inPicker = true;\n\n      var hueConfig = _objectSpread({\n        onDrag: this.handleHueDrag,\n        onChange: this.handleHueChange,\n        onMouseDown: this.handleHueMouseDown,\n        style: hueStyle\n      }, hueSpectrumProps);\n\n      if (hueConfig.width === undefined) {\n        hueConfig.width = hueWidth;\n      }\n\n      if (hueConfig.height === undefined) {\n        hueConfig.height = hueHeight || saturationHeight;\n      }\n\n      hueConfig.inPicker = true;\n\n      if (dragHue) {\n        value.h = dragHue;\n      }\n\n      saturationConfig.value = _objectSpread({}, value);\n      hueConfig.value = _objectSpread({}, value);\n      return /*#__PURE__*/React.createElement(\"div\", _extends({}, divProps, {\n        className: className\n      }), /*#__PURE__*/React.createElement(SaturationSpectrum, saturationConfig), /*#__PURE__*/React.createElement(HueSpectrum, hueConfig));\n    }\n  }]);\n\n  return ColorPicker;\n}(Component);\n\n_defineProperty(ColorPicker, \"propTypes\", {\n  className: PropTypes.string,\n  hueStyle: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n  onDrag: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.any,\n  defaultColor: PropTypes.any,\n  hueHeight: PropTypes.number,\n  hueMargin: PropTypes.number,\n  hueWidth: PropTypes.number,\n  saturationWidth: PropTypes.number,\n  saturationHeight: PropTypes.number,\n  children: PropTypes.node\n});\n\n_defineProperty(ColorPicker, \"defaultProps\", {\n  className: '',\n  hueStyle: {},\n  onDrag: Function.prototype,\n  onChange: Function.prototype,\n  value: null,\n  defaultColor: DEFAULT_COLOR,\n  hueHeight: null,\n  hueMargin: 10,\n  hueWidth: 30,\n  saturationWidth: 300,\n  saturationHeight: 300,\n  children: null\n});\n\nexport { HueSpectrum, SaturationSpectrum };\nexport default ColorPicker;", "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BaseComponent, { baseInitialState, basePropTypes, baseDefaultProps } from './utils/common';\nimport DEFAULT_COLOR from './defaultColor';\nimport VALIDATE from './utils/validate';\nimport toColorValue from './utils/toColorValue';\n\nvar HueSpectrum = /*#__PURE__*/function (_BaseComponent) {\n  _inherits(HueSpectrum, _BaseComponent);\n\n  var _super = _createSuper(HueSpectrum);\n\n  function HueSpectrum() {\n    var _this;\n\n    _classCallCheck(this, HueSpectrum);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread(_objectSpread({}, baseInitialState), {}, {\n      h: 0\n    }));\n\n    return _this;\n  }\n\n  _createClass(HueSpectrum, [{\n    key: \"isComponentMounted\",\n    value: function isComponentMounted() {\n      return this.mounted;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n      this.updateDragPositionIf();\n    }\n  }, {\n    key: \"updateDragPositionIf\",\n    value: function updateDragPositionIf() {\n      if (!this.props.height) {\n        this.setState({});\n      }\n    }\n  }, {\n    key: \"getDragPosition\",\n    value: function getDragPosition() {\n      var _this$props = this.props,\n          height = _this$props.height,\n          pointerSize = _this$props.pointerSize;\n\n      if (!height && !this.isComponentMounted()) {\n        return null;\n      }\n\n      var computedHeight = height || this.getDOMRegion().getHeight();\n      var size = pointerSize;\n      var pos = Math.round(this.hsv.h * computedHeight / 360);\n      var diff = Math.round(size / 2);\n      return pos - diff;\n    }\n  }, {\n    key: \"updateColor\",\n    value: function updateColor(point) {\n      var newPoint = VALIDATE(point);\n      this.hsv.h = newPoint.y * 360 / newPoint.height;\n\n      var newHsv = _objectSpread({}, this.hsv);\n\n      var newH;\n\n      if (this.hsv.h !== 0) {\n        newH = this.hsv.h;\n      }\n\n      newH = this.hsv.h !== 0 ? this.hsv.h : 0;\n      this.setState({\n        h: newH\n      });\n      this.hsv = newHsv;\n      return newHsv;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          value = _this$props2.value,\n          defaultColor = _this$props2.defaultColor,\n          pointerSize = _this$props2.pointerSize,\n          height = _this$props2.height,\n          width = _this$props2.width;\n      var h = this.state.h;\n      this.hsv = toColorValue(value || defaultColor);\n\n      if (h === 360 && !this.hsv.h) {\n        // in order to show bottom red as well on drag\n        this.hsv.h = 360;\n      }\n\n      var rootStyle = _objectSpread({}, style);\n\n      if (height) {\n        rootStyle.height = height;\n      }\n\n      if (width) {\n        rootStyle.width = width;\n      }\n\n      var dragStyle = {\n        height: pointerSize\n      };\n      var dragPos = this.getDragPosition();\n\n      if (dragPos !== null) {\n        dragStyle.top = dragPos;\n        dragStyle.display = 'block';\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"react-color-picker__hue-spectrum\",\n        style: rootStyle,\n        onMouseDown: this.onMouseDown,\n        role: \"button\",\n        ref: this.rootRef,\n        tabIndex: 0\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"react-color-picker__hue-drag\",\n        style: dragStyle\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"react-color-picker__hue-inner\"\n      })));\n    }\n  }]);\n\n  return HueSpectrum;\n}(BaseComponent);\n\n_defineProperty(HueSpectrum, \"propTypes\", _objectSpread(_objectSpread({}, basePropTypes), {}, {\n  value: PropTypes.any,\n  height: PropTypes.number,\n  width: PropTypes.number,\n  pointerSize: PropTypes.number,\n  defaultColor: PropTypes.any,\n  isHueSpectrum: PropTypes.bool\n}));\n\n_defineProperty(HueSpectrum, \"defaultProps\", _objectSpread(_objectSpread({}, baseDefaultProps), {}, {\n  value: null,\n  height: 300,\n  width: 30,\n  pointerSize: 3,\n  defaultColor: DEFAULT_COLOR,\n  isHueSpectrum: true\n}));\n\nexport default HueSpectrum;", "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable */\nimport { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport Region from 'region';\nimport DragHelper from 'drag-helper';\nimport toStringValue from './toStringValue';\nexport var baseInitialState = {\n  top: 0,\n  left: 0,\n  mouseDown: null\n};\nexport var basePropTypes = {\n  inPicker: PropTypes.bool,\n  onMouseDown: PropTypes.func,\n  onDrag: PropTypes.func,\n  onChange: PropTypes.func\n};\nexport var baseDefaultProps = {\n  inPicker: false,\n  onMouseDown: null,\n  onDrag: null,\n  onChange: null\n};\n\nvar getEventInfo = function getEventInfo(event, region) {\n  var x = event.clientX - region.left;\n  var y = event.clientY - region.top;\n  return {\n    x: x,\n    y: y,\n    width: region.getWidth(),\n    height: region.getHeight()\n  };\n};\n\nvar BaseComponent = /*#__PURE__*/function (_Component) {\n  _inherits(BaseComponent, _Component);\n\n  var _super = _createSuper(BaseComponent);\n\n  function BaseComponent() {\n    var _this;\n\n    _classCallCheck(this, BaseComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", baseInitialState);\n\n    _defineProperty(_assertThisInitialized(_this), \"rootRef\", /*#__PURE__*/createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDragStart\", Function.prototype);\n\n    _defineProperty(_assertThisInitialized(_this), \"onMouseDown\", function (event) {\n      event.preventDefault();\n\n      var region = _this.getDOMRegion();\n\n      var info = getEventInfo(event, region);\n      DragHelper(event, {\n        scope: _assertThisInitialized(_this),\n        constrainTo: region,\n\n        /* eslint-disable no-param-reassign */\n        onDragStart: function onDragStart(dragStartEvent, config) {\n          config.initialPoint = info;\n          config.minLeft = 0;\n          config.maxLeft = region.width;\n          this.handleDragStart(dragStartEvent);\n        },\n\n        /* eslint-enable no-param-reassign */\n        onDrag: function onDrag(dragEvent, config) {\n          var dragInfo = getEventInfo(dragEvent, region);\n          var newHsv = this.updateColor(dragInfo);\n          this.handleDrag(dragEvent, config, newHsv);\n        },\n        onDrop: function onDrop(dropEvent, config) {\n          var dropInfo = getEventInfo(dropEvent, region);\n          var newHsv = this.updateColor(dropInfo);\n          this.handleDrop(dropEvent, config, newHsv);\n        }\n      });\n\n      _this.updateColor(info);\n\n      _this.handleMouseDown(event, {\n        initialPoint: info\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMouseDown\", function (event, config) {\n      var onMouseDown = _this.props.onMouseDown;\n\n      if (onMouseDown) {\n        onMouseDown.apply(_assertThisInitialized(_this), _this.getColors(_this.hsv));\n      }\n\n      _this.handleDrag(event, config, _this.hsv);\n    });\n\n    return _this;\n  }\n\n  _createClass(BaseComponent, [{\n    key: \"getDOMRegion\",\n    value: function getDOMRegion() {\n      return Region.fromDOM(this.rootRef.current);\n    }\n  }, {\n    key: \"getColors\",\n    value: function getColors(hsv) {\n      var inPicker = this.props.inPicker;\n      var first = inPicker ? hsv : toStringValue(hsv);\n      var args = [first];\n\n      if (!inPicker) {\n        args.push(_objectSpread({}, hsv));\n      }\n\n      return args;\n    }\n  }, {\n    key: \"handleUpdate\",\n    value: function handleUpdate(event, config) {\n      var diff = config.diff || {\n        top: 0,\n        left: 0\n      };\n      var initialPoint = config.initialPoint;\n\n      if (initialPoint) {\n        var left;\n        left = initialPoint.x + diff.left;\n        var top = initialPoint.y + diff.top;\n        left = Math.max(left, config.minLeft);\n        left = Math.min(left, config.maxLeft);\n        this.setState({\n          top: top,\n          left: left,\n          mouseDown: {\n            x: left,\n            y: top,\n            width: initialPoint.width,\n            height: initialPoint.height\n          }\n        });\n      }\n    }\n  }, {\n    key: \"handleDrag\",\n    value: function handleDrag(event, config, hsv) {\n      var onDrag = this.props.onDrag;\n      this.handleUpdate(event, config);\n\n      if (onDrag) {\n        onDrag.apply(this, this.getColors(hsv));\n      }\n    }\n  }, {\n    key: \"handleDrop\",\n    value: function handleDrop(event, config, hsv) {\n      var onChange = this.props.onChange;\n      this.handleUpdate(event, config);\n      this.setState({\n        mouseDown: false\n      });\n\n      if (onChange) {\n        onChange.apply(this, this.getColors(hsv));\n      }\n    }\n  }]);\n\n  return BaseComponent;\n}(Component);\n\n_defineProperty(BaseComponent, \"propTypes\", basePropTypes);\n\n_defineProperty(BaseComponent, \"defaultProps\", baseDefaultProps);\n\nexport default BaseComponent;", "import tinycolor from 'tinycolor2';\n\nfunction toColor(color) {\n  return tinycolor(color);\n}\n\nfunction toPure(color) {\n  var _toColor$toHsl = toColor(color).toHsl(),\n      h = _toColor$toHsl.h;\n\n  return toColor({\n    h: h,\n    s: 100,\n    l: 50,\n    a: 1\n  });\n}\n\nfunction fromRatio(color) {\n  return tinycolor.fromRatio(color);\n}\n\nfunction toAlpha(color, alpha) {\n  var newAlpha = alpha > 1 ? alpha / 100 : alpha;\n  var newColor = toColor(color).toRgb();\n  newColor.a = newAlpha;\n  return toColor(newColor);\n}\n\nfunction toHsv(color) {\n  return toColor(color).toHsv();\n}\n\nexport default {\n  fromRatio: fromRatio,\n  toAlpha: toAlpha,\n  toColor: toColor,\n  toHsv: toHsv,\n  toPure: toPure\n};\nexport { fromRatio, toAlpha, toColor, toHsv, toPure };", "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { toColor } from './color';\n\nvar toStringValue = function toStringValue(color) {\n  var newColor = toColor(_objectSpread({}, color));\n  return newColor.toRgb().a === 1 ? newColor.toHexString() : newColor.toRgbString();\n};\n\nexport default toStringValue;", "export default 'red';", "/* eslint-disable no-param-reassign */\nexport default (function (info) {\n  var height = info.height,\n      width = info.width;\n\n  if (info.x < 0) {\n    info.x = 0;\n  }\n\n  if (info.x >= width) {\n    info.x = width;\n  }\n\n  if (info.y < 0) {\n    info.y = 0;\n  }\n\n  if (info.y >= height) {\n    info.y = height;\n  }\n\n  return info;\n});", "import { toHsv } from './color';\n\nvar toColorValue = function toColorValue(value) {\n  if (typeof value === 'string') {\n    return toHsv(value);\n  }\n\n  return {\n    h: value.h,\n    s: value.s,\n    v: value.v,\n    a: value.a\n  };\n};\n\nexport default toColorValue;", "import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { fromRatio } from './utils/color';\nimport BaseComponent, { baseInitialState, basePropTypes, baseDefaultProps } from './utils/common';\nimport DEFAULT_COLOR from './defaultColor';\nimport VALIDATE from './utils/validate';\nimport toColorValue from './utils/toColorValue';\n\nvar getSaturationForPoint = function getSaturationForPoint(point) {\n  return point.x / point.width;\n};\n\nvar getColorValueForPoint = function getColorValueForPoint(point) {\n  return (point.height - point.y) / point.height;\n};\n\nvar prepareBackgroundColor = function prepareBackgroundColor(color) {\n  var hsv = color;\n  var col = fromRatio({\n    h: hsv.h % 360 / 360,\n    s: 1,\n    v: 1\n  });\n  return col.toRgbString();\n};\n\nvar SaturationSpectrum = /*#__PURE__*/function (_BaseComponent) {\n  _inherits(SaturationSpectrum, _BaseComponent);\n\n  var _super = _createSuper(SaturationSpectrum);\n\n  function SaturationSpectrum() {\n    var _this;\n\n    _classCallCheck(this, SaturationSpectrum);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread(_objectSpread({}, baseInitialState), {}, {\n      pointerTop: null,\n      pointerLeft: null\n    }));\n\n    return _this;\n  }\n\n  _createClass(SaturationSpectrum, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n      this.updateDragPositionIf();\n    }\n  }, {\n    key: \"isComponentMounted\",\n    value: function isComponentMounted() {\n      return this.mounted;\n    }\n  }, {\n    key: \"updateDragPositionIf\",\n    value: function updateDragPositionIf() {\n      if (!this.props.height || !this.props.width) {\n        this.setState({});\n      }\n    }\n  }, {\n    key: \"getDragPosition\",\n    value: function getDragPosition() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          pointerSize = _this$props.pointerSize;\n      var _this$props2 = this.props,\n          width = _this$props2.width,\n          height = _this$props2.height;\n      var mouseDown = this.state.mouseDown;\n      var sizeDefined = width && height;\n\n      if (!sizeDefined && !this.isComponentMounted()) {\n        return null;\n      }\n\n      var region;\n\n      if (!sizeDefined) {\n        region = this.getDOMRegion();\n        height = height || region.getHeight();\n        width = width || region.getWidth();\n      }\n\n      var x = this.hsv.s * width;\n      var y = height - this.hsv.v * height;\n      var size = pointerSize;\n      var diff = Math.floor(size / 2);\n\n      if (value && mouseDown && !Number.isNaN(mouseDown.x)) {\n        x = mouseDown.x;\n      }\n\n      return {\n        left: x - diff,\n        top: y - diff\n      };\n    }\n  }, {\n    key: \"prepareProps\",\n    value: function prepareProps(thisProps) {\n      var props = _objectSpread({}, thisProps);\n\n      var color = props.value || props.defaultColor;\n      props.color = color;\n      this.hsv = toColorValue(color);\n      props.style = this.prepareStyle(props);\n      props.className = cx(thisProps.className, 'react-color-picker__saturation-spectrum');\n      return props;\n    }\n  }, {\n    key: \"prepareStyle\",\n    value: function prepareStyle(props) {\n      var style = _objectSpread({}, props.style);\n\n      if (props.height) {\n        style.height = props.height;\n      }\n\n      if (props.width) {\n        style.width = props.width;\n      }\n\n      style.backgroundColor = prepareBackgroundColor(this.hsv);\n      return style;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var pointerSize = this.props.pointerSize;\n      var props = this.prepareProps(this.props);\n      var dragStyle = {\n        width: pointerSize,\n        height: pointerSize\n      };\n      var dragPos = this.getDragPosition();\n\n      if (dragPos) {\n        dragStyle.top = dragPos.top;\n        dragStyle.left = dragPos.left;\n        dragStyle.display = 'block';\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: props.className,\n        style: props.style,\n        onMouseDown: this.onMouseDown,\n        role: \"button\",\n        ref: this.rootRef,\n        tabIndex: 0\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"react-color-picker__saturation-white\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"react-color-picker__saturation-black\"\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"react-color-picker__saturation-drag\",\n        style: dragStyle\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"react-color-picker__saturation-inner\"\n      })));\n    }\n  }, {\n    key: \"updateColor\",\n    value: function updateColor(point) {\n      var newPoint = VALIDATE(point);\n      this.hsv.s = getSaturationForPoint(newPoint);\n      this.hsv.v = getColorValueForPoint(newPoint);\n\n      var newHsv = _objectSpread({}, this.hsv);\n\n      this.hsv = newHsv;\n      return newHsv;\n    }\n  }]);\n\n  return SaturationSpectrum;\n}(BaseComponent);\n\n_defineProperty(SaturationSpectrum, \"propTypes\", _objectSpread(_objectSpread({}, basePropTypes), {}, {\n  value: PropTypes.any,\n  height: PropTypes.number,\n  width: PropTypes.number,\n  pointerSize: PropTypes.number,\n  defaultColor: PropTypes.any,\n  isSaturationSpectrum: PropTypes.bool\n}));\n\n_defineProperty(SaturationSpectrum, \"defaultProps\", _objectSpread(_objectSpread({}, baseDefaultProps), {}, {\n  value: null,\n  height: 300,\n  width: 300,\n  pointerSize: 7,\n  defaultColor: DEFAULT_COLOR,\n  isSaturationSpectrum: true\n}));\n\nexport default SaturationSpectrum;", "import d from \"./node_modules/@vtaits/react-color-picker/es/index.js\";export default d;\nexport * from \"./node_modules/@vtaits/react-color-picker/es/index.js\""],
  "mappings": "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",
  "names": ["require_object_assign", "methodName", "Region", "Region", "Region", "Region", "Region", "Region", "event", "import_react", "import_classnames", "import_prop_types", "import_react", "import_prop_types", "tinycolor", "tinycolor", "toStringValue", "ownKeys", "_objectSpread", "PropTypes", "getEventInfo", "BaseComponent", "DragHelper", "Region", "toColorValue", "ownKeys", "_objectSpread", "_createSuper", "_isNativeReflectConstruct", "HueSpectrum", "React", "PropTypes", "import_react", "import_prop_types", "ownKeys", "_objectSpread", "_createSuper", "_isNativeReflectConstruct", "getSaturationForPoint", "getColorValueForPoint", "prepareBackgroundColor", "SaturationSpectrum", "cx", "React", "PropTypes", "ownKeys", "_objectSpread", "_createSuper", "_isNativeReflectConstruct", "ColorPicker", "cx", "React", "PropTypes"]
}
